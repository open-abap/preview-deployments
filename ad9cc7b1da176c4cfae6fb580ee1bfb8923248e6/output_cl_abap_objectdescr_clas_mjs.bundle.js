"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkopen_table_maintenance"] = self["webpackChunkopen_table_maintenance"] || []).push([["output_cl_abap_objectdescr_clas_mjs"],{

/***/ "./output/cl_abap_objectdescr.clas.mjs":
/*!*********************************************!*\
  !*** ./output/cl_abap_objectdescr.clas.mjs ***!
  \*********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cl_abap_objectdescr\": () => (/* binding */ cl_abap_objectdescr)\n/* harmony export */ });\nconst {cl_abap_typedescr} = await __webpack_require__.e(/*! import() */ \"output_cl_abap_typedescr_clas_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! ./cl_abap_typedescr.clas.mjs */ \"./output/cl_abap_typedescr.clas.mjs\"));\nconst {cx_root} = await __webpack_require__.e(/*! import() */ \"output_cx_root_clas_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! ./cx_root.clas.mjs */ \"./output/cx_root.clas.mjs\"));\n// cl_abap_objectdescr.clas.abap\nclass cl_abap_objectdescr extends cl_abap_typedescr {\n  static INTERNAL_TYPE = 'CLAS';\n  static IMPLEMENTED_INTERFACES = [];\n  async constructor_() {\n    await super.constructor_();\n    this.me = new abap.types.ABAPObject();\n    this.me.set(this);\n    this.mv_object_name = new abap.types.String({qualifiedName: \"STRING\"});\n    this.mv_object_type = new abap.types.String({qualifiedName: \"STRING\"});\n    this.changing = cl_abap_objectdescr.changing;\n    this.exporting = cl_abap_objectdescr.exporting;\n    this.importing = cl_abap_objectdescr.importing;\n    this.receiving = cl_abap_objectdescr.receiving;\n    this.returning = cl_abap_objectdescr.returning;\n    this.private_ = cl_abap_objectdescr.private_;\n    this.protected = cl_abap_objectdescr.protected;\n    this.public_ = cl_abap_objectdescr.public_;\n    return this;\n  }\n  async get_attribute_type(INPUT) {\n    let p_descr_ref = new abap.types.ABAPObject({qualifiedName: \"CL_ABAP_DATADESCR\"});\n    let p_name = new abap.types.Character({length: 4});\n    if (INPUT && INPUT.p_name) {p_name = INPUT.p_name;}\n    let lv_name = new abap.types.String({qualifiedName: \"STRING\"});\n    let l_sub = new abap.types.String({qualifiedName: \"STRING\"});\n    let l_any = new abap.types.String({qualifiedName: \"STRING\"});\n    lv_name.set(p_name);\n    let foo = abap.Classes[this.mv_object_name.get()];\n    abap.statements.concatenate({source: [this.mv_object_name, new abap.types.Character({length: 1}).set('$'), lv_name], target: l_sub});\n    l_sub.set(abap.builtin.to_lower({val: l_sub}));\n    l_any = foo[l_sub.get()];\n    await abap.statements.cast(p_descr_ref, (await this.describe_by_data({p_data: l_any})));\n    return p_descr_ref;\n  }\n}\nabap.Classes['CL_ABAP_OBJECTDESCR'] = cl_abap_objectdescr;\ncl_abap_objectdescr.changing = new abap.types.Character({qualifiedName: \"abap_parmkind\"});\ncl_abap_objectdescr.changing.set('C');\ncl_abap_objectdescr.exporting = new abap.types.Character({qualifiedName: \"abap_parmkind\"});\ncl_abap_objectdescr.exporting.set('E');\ncl_abap_objectdescr.importing = new abap.types.Character({qualifiedName: \"abap_parmkind\"});\ncl_abap_objectdescr.importing.set('I');\ncl_abap_objectdescr.receiving = new abap.types.Character({qualifiedName: \"abap_parmkind\"});\ncl_abap_objectdescr.receiving.set('R');\ncl_abap_objectdescr.returning = new abap.types.Character({qualifiedName: \"abap_parmkind\"});\ncl_abap_objectdescr.returning.set('R');\ncl_abap_objectdescr.private_ = new abap.types.Character({qualifiedName: \"abap_visibility\"});\ncl_abap_objectdescr.private_.set('I');\ncl_abap_objectdescr.protected = new abap.types.Character({qualifiedName: \"abap_visibility\"});\ncl_abap_objectdescr.protected.set('O');\ncl_abap_objectdescr.public_ = new abap.types.Character({qualifiedName: \"abap_visibility\"});\ncl_abap_objectdescr.public_.set('U');\n\n//# sourceMappingURL=cl_abap_objectdescr.clas.mjs.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://open-table-maintenance/./output/cl_abap_objectdescr.clas.mjs?");

/***/ })

}]);