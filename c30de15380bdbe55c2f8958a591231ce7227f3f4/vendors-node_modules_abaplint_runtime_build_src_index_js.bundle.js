"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkopen_table_maintenance"] = self["webpackChunkopen_table_maintenance"] || []).push([["vendors-node_modules_abaplint_runtime_build_src_index_js"],{

/***/ "./node_modules/@abaplint/runtime/build/src/abap_regex.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/abap_regex.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPRegExp = void 0;\r\nclass ABAPRegExp {\r\n    // converts from ABAP specific regex to javascript regex\r\n    static convert(input) {\r\n        let ret = input;\r\n        ret = input.replace(/\\[\\[:punct:\\]\\]/g, \"[\\\\.\\\\,\\\\-\\\\{\\\\}\\\\[\\\\]\\\\:\\\\!\\\\?\\\\(\\\\)\\\\;\\\\']\");\r\n        return ret;\r\n    }\r\n}\r\nexports.ABAPRegExp = ABAPRegExp;\r\n//# sourceMappingURL=abap_regex.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/abap_regex.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/abs.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/abs.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.abs = void 0;\r\nfunction abs(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.abs(num_in);\r\n}\r\nexports.abs = abs;\r\n//# sourceMappingURL=abs.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/abs.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/boolc.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/boolc.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.boolc = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction boolc(input) {\r\n    if (input === true) {\r\n        return new types_1.String().set(\"X\");\r\n    }\r\n    else if (input === false || input === undefined) {\r\n        return new types_1.String().set(\" \");\r\n    }\r\n    else if (input.val instanceof types_1.Character && input.val.get().trim() === \"\") {\r\n        return new types_1.String().set(\" \");\r\n    }\r\n    else {\r\n        return new types_1.String().set(\"X\");\r\n    }\r\n}\r\nexports.boolc = boolc;\r\n//# sourceMappingURL=boolc.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/boolc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/ceil.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/ceil.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ceil = void 0;\r\nfunction ceil(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.ceil(num_in);\r\n}\r\nexports.ceil = ceil;\r\n//# sourceMappingURL=ceil.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/ceil.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/concat_lines_of.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/concat_lines_of.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.concat_lines_of = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction concat_lines_of(input) {\r\n    let s = input.sep;\r\n    if (s === undefined) {\r\n        s = \"\";\r\n    }\r\n    else if (typeof s !== \"string\") {\r\n        s = s.get();\r\n    }\r\n    return new string_1.String().set(input.table.array().map(e => e.get()).join(s));\r\n}\r\nexports.concat_lines_of = concat_lines_of;\r\n//# sourceMappingURL=concat_lines_of.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/concat_lines_of.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/condense.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/condense.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.condense = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction condense(input) {\r\n    let str = typeof input.val === \"string\" ? input.val : input.val.get().toString();\r\n    let from = \" \";\r\n    if (input.from) {\r\n        from = typeof input.from === \"string\" ? input.from : input.from.get().toString();\r\n    }\r\n    let to = \" \";\r\n    if (input.to) {\r\n        to = typeof input.to === \"string\" ? input.to : input.to.get().toString();\r\n    }\r\n    /*\r\n    let del = \" \";\r\n    if (input.del) {\r\n      del = typeof input.del === \"string\" ? input.del : input.del.get().toString();\r\n    }\r\n    */\r\n    str = str.replace(/ +$/, \"\");\r\n    str = str.replace(/^ +/, \"\");\r\n    for (const f of from.split(\"\")) {\r\n        str = str.replace(new RegExp(f.replace(\".\", \"\\\\.\"), \"g\"), to);\r\n    }\r\n    return new types_1.String().set(str.replace(/ {2,}/g, \" \"));\r\n}\r\nexports.condense = condense;\r\n//# sourceMappingURL=condense.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/condense.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/cos.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/cos.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.cos = void 0;\r\n/* eslint-disable radix */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction cos(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else if (input.val instanceof types_1.Float) {\r\n        num_in = input.val.getRaw();\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.cos(num_in);\r\n}\r\nexports.cos = cos;\r\n//# sourceMappingURL=cos.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/cos.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/count.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/count.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.count = void 0;\r\nconst compare_1 = __webpack_require__(/*! ../compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction count(input) {\r\n    let found = 0;\r\n    const val = input.val.get();\r\n    let reg = \"\";\r\n    if (input.sub) {\r\n        reg = input.sub.get();\r\n        reg = reg.replace(/\\*/g, \"\\\\*\");\r\n    }\r\n    else if (input.regex) {\r\n        reg = input.regex.get();\r\n    }\r\n    let options = \"g\";\r\n    if (input.case && (0, compare_1.initial)(input.case)) {\r\n        options += \"i\";\r\n    }\r\n    if (val !== \"\") {\r\n        const res = val.match(new RegExp(reg, options));\r\n        if (res) {\r\n            found = res.length;\r\n        }\r\n    }\r\n    return new types_1.Integer().set(found);\r\n}\r\nexports.count = count;\r\n//# sourceMappingURL=count.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/count.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/escape.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/escape.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.escape = void 0;\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction escape(input) {\r\n    let val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    const format = typeof input.format === \"number\" ? input.format : input.format.get();\r\n    switch (format) {\r\n        case 4: // e_html_text\r\n            val = val.replace(/&/g, \"&amp;\");\r\n            val = val.replace(/</g, \"&lt;\");\r\n            val = val.replace(/>/g, \"&gt;\");\r\n            break;\r\n        case 5: // e_html_attr\r\n            val = val.replace(/&/g, \"&amp;\");\r\n            val = val.replace(/</g, \"&lt;\");\r\n            val = val.replace(/>/g, \"&gt;\");\r\n            val = val.replace(/\"/g, \"&quot;\");\r\n            val = val.replace(/'/g, \"&#39;\");\r\n            break;\r\n        case 12: // e_url\r\n            val = encodeURI(val);\r\n            break;\r\n        default:\r\n        // todo, runtime error\r\n    }\r\n    return new types_1.String().set(val);\r\n}\r\nexports.escape = escape;\r\n//# sourceMappingURL=escape.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/escape.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/find.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/find.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.find = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction find(input) {\r\n    var _a, _b, _c, _d;\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    if (input.regex) {\r\n        const caseInput = typeof input.case === \"string\" ? input.case : (_a = input.case) === null || _a === void 0 ? void 0 : _a.get();\r\n        const regex = typeof input.regex === \"string\" ? input.regex : input.regex.get();\r\n        const flags = caseInput !== \"X\" ? \"i\" : \"\";\r\n        const reg = new RegExp(regex, flags);\r\n        const ret = (_b = val.match(reg)) === null || _b === void 0 ? void 0 : _b.index;\r\n        if (ret !== undefined) {\r\n            return new types_1.Integer().set(ret);\r\n        }\r\n        else {\r\n            return new types_1.Integer().set(-1);\r\n        }\r\n    }\r\n    else {\r\n        const sub = typeof input.sub === \"string\" ? input.sub : (_c = input.sub) === null || _c === void 0 ? void 0 : _c.get();\r\n        const off = typeof input.off === \"number\" ? input.off : (_d = input.off) === null || _d === void 0 ? void 0 : _d.get();\r\n        const found = val.indexOf(sub || \"\", off);\r\n        return new types_1.Integer().set(found);\r\n    }\r\n}\r\nexports.find = find;\r\n//# sourceMappingURL=find.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/find.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/floor.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/floor.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.floor = void 0;\r\nfunction floor(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.floor(num_in);\r\n}\r\nexports.floor = floor;\r\n//# sourceMappingURL=floor.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/floor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/frac.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/frac.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.frac = void 0;\r\n/* eslint-disable radix */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction frac(input) {\r\n    let num_in = undefined;\r\n    let ret = 0;\r\n    let pre = \"0.\";\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else if (input.val instanceof types_1.DecFloat34\r\n        || input.val instanceof types_1.Float) {\r\n        num_in = input.val.getRaw();\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    const numSplit = num_in.toString().split(\".\");\r\n    if (numSplit.length === 2) {\r\n        if (num_in < 0) {\r\n            pre = \"-0.\";\r\n        }\r\n        ret = parseFloat(pre + numSplit[1]);\r\n    }\r\n    if (input.val instanceof types_1.DecFloat34) {\r\n        return new types_1.DecFloat34().set(ret);\r\n    }\r\n    else if (input.val instanceof types_1.Float) {\r\n        return new types_1.Float().set(ret);\r\n    }\r\n    else {\r\n        return ret;\r\n    }\r\n}\r\nexports.frac = frac;\r\n//# sourceMappingURL=frac.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/frac.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.space = exports.abap_undefined = exports.abap_false = exports.abap_true = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\n__exportStar(__webpack_require__(/*! ./abs */ \"./node_modules/@abaplint/runtime/build/src/builtin/abs.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./boolc */ \"./node_modules/@abaplint/runtime/build/src/builtin/boolc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ceil */ \"./node_modules/@abaplint/runtime/build/src/builtin/ceil.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./concat_lines_of */ \"./node_modules/@abaplint/runtime/build/src/builtin/concat_lines_of.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./condense */ \"./node_modules/@abaplint/runtime/build/src/builtin/condense.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cos */ \"./node_modules/@abaplint/runtime/build/src/builtin/cos.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./count */ \"./node_modules/@abaplint/runtime/build/src/builtin/count.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./escape */ \"./node_modules/@abaplint/runtime/build/src/builtin/escape.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./find */ \"./node_modules/@abaplint/runtime/build/src/builtin/find.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./floor */ \"./node_modules/@abaplint/runtime/build/src/builtin/floor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./frac */ \"./node_modules/@abaplint/runtime/build/src/builtin/frac.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./insert */ \"./node_modules/@abaplint/runtime/build/src/builtin/insert.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./lines */ \"./node_modules/@abaplint/runtime/build/src/builtin/lines.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./match */ \"./node_modules/@abaplint/runtime/build/src/builtin/match.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./matches */ \"./node_modules/@abaplint/runtime/build/src/builtin/matches.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./nmax */ \"./node_modules/@abaplint/runtime/build/src/builtin/nmax.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./nmin */ \"./node_modules/@abaplint/runtime/build/src/builtin/nmin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./repeat */ \"./node_modules/@abaplint/runtime/build/src/builtin/repeat.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./replace */ \"./node_modules/@abaplint/runtime/build/src/builtin/replace.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./reverse */ \"./node_modules/@abaplint/runtime/build/src/builtin/reverse.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./round */ \"./node_modules/@abaplint/runtime/build/src/builtin/round.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./shift_left */ \"./node_modules/@abaplint/runtime/build/src/builtin/shift_left.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sign */ \"./node_modules/@abaplint/runtime/build/src/builtin/sign.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sin */ \"./node_modules/@abaplint/runtime/build/src/builtin/sin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sqrt */ \"./node_modules/@abaplint/runtime/build/src/builtin/sqrt.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./strlen */ \"./node_modules/@abaplint/runtime/build/src/builtin/strlen.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./substring_after */ \"./node_modules/@abaplint/runtime/build/src/builtin/substring_after.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./substring_before */ \"./node_modules/@abaplint/runtime/build/src/builtin/substring_before.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./substring */ \"./node_modules/@abaplint/runtime/build/src/builtin/substring.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sy */ \"./node_modules/@abaplint/runtime/build/src/builtin/sy.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./tan */ \"./node_modules/@abaplint/runtime/build/src/builtin/tan.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./to_lower */ \"./node_modules/@abaplint/runtime/build/src/builtin/to_lower.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./to_mixed */ \"./node_modules/@abaplint/runtime/build/src/builtin/to_mixed.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./to_upper */ \"./node_modules/@abaplint/runtime/build/src/builtin/to_upper.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./translate */ \"./node_modules/@abaplint/runtime/build/src/builtin/translate.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./trunc */ \"./node_modules/@abaplint/runtime/build/src/builtin/trunc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./xstrlen */ \"./node_modules/@abaplint/runtime/build/src/builtin/xstrlen.js\"), exports);\r\nexports.abap_true = new types_1.Character({ length: 1, qualifiedName: \"ABAP_BOOL\" }).set(\"X\");\r\nexports.abap_false = new types_1.Character({ length: 1, qualifiedName: \"ABAP_BOOL\" }).set(\"\");\r\nexports.abap_undefined = new types_1.Character({ length: 1, qualifiedName: \"ABAP_BOOL\" }).set(\"-\");\r\nexports.space = new types_1.Character({ length: 1, qualifiedName: \"ABAP_BOOL\" }).set(\" \");\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/insert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/insert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.insert = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction insert(input) {\r\n    let offset = 0;\r\n    if (input.off) {\r\n        offset = input.off.get();\r\n    }\r\n    const value = input.val.getOffset({ offset: 0, length: offset }).get() +\r\n        input.sub.get() +\r\n        input.val.getOffset({ offset: offset }).get();\r\n    return new types_1.String().set(value);\r\n}\r\nexports.insert = insert;\r\n//# sourceMappingURL=insert.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/insert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/lines.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/lines.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.lines = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction lines(input) {\r\n    return new types_1.Integer().set(input.val.array().length);\r\n}\r\nexports.lines = lines;\r\n//# sourceMappingURL=lines.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/lines.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/match.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/match.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.match = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction match(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    let reg = \"\";\r\n    if (typeof input.regex === \"string\") {\r\n        reg = input.regex;\r\n    }\r\n    else {\r\n        reg = input.regex.get();\r\n    }\r\n    const r = new RegExp(reg);\r\n    const res = val.match(r);\r\n    let ret = \"\";\r\n    if (res && res[0]) {\r\n        ret = res[0];\r\n    }\r\n    return new string_1.String().set(ret);\r\n}\r\nexports.match = match;\r\n//# sourceMappingURL=match.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/match.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/matches.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/matches.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.matches = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction matches(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    let reg = \"\";\r\n    if (typeof input.regex === \"string\") {\r\n        reg = input.regex;\r\n    }\r\n    else {\r\n        reg = input.regex.get();\r\n    }\r\n    const r = new RegExp(\"^\" + reg + \"$\");\r\n    const res = val.match(r);\r\n    if (res !== null) {\r\n        return new types_1.Character().set(\"X\");\r\n    }\r\n    else {\r\n        return new types_1.Character().set(\" \");\r\n    }\r\n}\r\nexports.matches = matches;\r\n//# sourceMappingURL=matches.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/matches.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/nmax.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/nmax.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.nmax = void 0;\r\nconst integer_1 = __webpack_require__(/*! ../types/integer */ \"./node_modules/@abaplint/runtime/build/src/types/integer.js\");\r\nfunction nmax(input) {\r\n    const values = [];\r\n    values.push(get_nmax_val_input(input.val1));\r\n    values.push(get_nmax_val_input(input.val2));\r\n    if (input.val3) {\r\n        values.push(get_nmax_val_input(input.val3));\r\n    }\r\n    if (input.val4) {\r\n        values.push(get_nmax_val_input(input.val4));\r\n    }\r\n    if (input.val5) {\r\n        values.push(get_nmax_val_input(input.val5));\r\n    }\r\n    if (input.val6) {\r\n        values.push(get_nmax_val_input(input.val6));\r\n    }\r\n    if (input.val7) {\r\n        values.push(get_nmax_val_input(input.val7));\r\n    }\r\n    if (input.val8) {\r\n        values.push(get_nmax_val_input(input.val8));\r\n    }\r\n    if (input.val9) {\r\n        values.push(get_nmax_val_input(input.val9));\r\n    }\r\n    values.sort((a, b) => (b - a));\r\n    return new integer_1.Integer().set(values[0]);\r\n}\r\nexports.nmax = nmax;\r\nfunction get_nmax_val_input(val) {\r\n    if (typeof val === \"number\") {\r\n        return val;\r\n    }\r\n    else {\r\n        return val.get();\r\n    }\r\n}\r\n//# sourceMappingURL=nmax.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/nmax.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/nmin.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/nmin.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.nmin = void 0;\r\nconst integer_1 = __webpack_require__(/*! ../types/integer */ \"./node_modules/@abaplint/runtime/build/src/types/integer.js\");\r\nfunction nmin(input) {\r\n    const values = [];\r\n    values.push(get_nmin_val_input(input.val1));\r\n    values.push(get_nmin_val_input(input.val2));\r\n    if (input.val3) {\r\n        values.push(get_nmin_val_input(input.val3));\r\n    }\r\n    if (input.val4) {\r\n        values.push(get_nmin_val_input(input.val4));\r\n    }\r\n    if (input.val5) {\r\n        values.push(get_nmin_val_input(input.val5));\r\n    }\r\n    if (input.val6) {\r\n        values.push(get_nmin_val_input(input.val6));\r\n    }\r\n    if (input.val7) {\r\n        values.push(get_nmin_val_input(input.val7));\r\n    }\r\n    if (input.val8) {\r\n        values.push(get_nmin_val_input(input.val8));\r\n    }\r\n    if (input.val9) {\r\n        values.push(get_nmin_val_input(input.val9));\r\n    }\r\n    values.sort((a, b) => (a - b));\r\n    return new integer_1.Integer().set(values[0]);\r\n}\r\nexports.nmin = nmin;\r\nfunction get_nmin_val_input(val) {\r\n    if (typeof val === \"number\") {\r\n        return val;\r\n    }\r\n    else {\r\n        return val.get();\r\n    }\r\n}\r\n//# sourceMappingURL=nmin.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/nmin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/repeat.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/repeat.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.repeat = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction repeat(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    return new string_1.String().set(val.repeat(input.occ.get()));\r\n}\r\nexports.repeat = repeat;\r\n//# sourceMappingURL=repeat.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/repeat.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/replace.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/replace.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.replace = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst abap_regex_1 = __webpack_require__(/*! ../abap_regex */ \"./node_modules/@abaplint/runtime/build/src/abap_regex.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction replace(input) {\r\n    let val = undefined;\r\n    if (typeof input.val === \"string\") {\r\n        val = input.val;\r\n    }\r\n    else {\r\n        val = input.val.get();\r\n    }\r\n    let wi = undefined;\r\n    if (typeof input.with === \"string\") {\r\n        wi = input.with;\r\n    }\r\n    else if (input.with instanceof types_1.Character) {\r\n        wi = input.with.get().replace(/ *$/, \"\");\r\n    }\r\n    else if (input.with) {\r\n        wi = input.with.get();\r\n    }\r\n    let sub = undefined;\r\n    if (typeof input.sub === \"string\") {\r\n        sub = input.sub;\r\n    }\r\n    else if (input.sub) {\r\n        sub = input.sub.get();\r\n    }\r\n    if (sub !== undefined) {\r\n        sub = sub.replace(/\\\\/g, \"\\\\\\\\\");\r\n        sub = sub.replace(/\\[/g, \"\\\\[\");\r\n    }\r\n    if (typeof input.regex === \"string\") {\r\n        sub = new RegExp(abap_regex_1.ABAPRegExp.convert(input.regex), \"g\");\r\n    }\r\n    else if (input.regex) {\r\n        sub = new RegExp(abap_regex_1.ABAPRegExp.convert(input.regex.get()), \"g\");\r\n    }\r\n    if (input.off && input.len && typeof input.val === \"string\") {\r\n        const offset = input.off.get();\r\n        const length = input.len.get();\r\n        val = val.substring(0, offset) + wi + val.substring(offset + length);\r\n    }\r\n    else if (input.off && input.len && !(typeof input.val === \"string\")) {\r\n        const offset = input.off.get();\r\n        const length = input.len.get();\r\n        val = input.val.getOffset({ offset: 0, length: offset }).get() +\r\n            wi +\r\n            input.val.getOffset({ offset: offset + length }).get();\r\n    }\r\n    else if (input.occ === undefined && sub && wi) {\r\n        val = val.replace(sub, wi);\r\n    }\r\n    else if (input.occ && input.occ.get() === 0 && sub && wi !== undefined) {\r\n        if (typeof sub === \"string\") {\r\n            sub = new RegExp(sub, \"g\");\r\n        }\r\n        val = val.replace(sub, wi);\r\n    }\r\n    return new string_1.String().set(val);\r\n}\r\nexports.replace = replace;\r\n//# sourceMappingURL=replace.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/replace.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/reverse.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/reverse.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.reverse = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction reverse(input) {\r\n    let val = \"\";\r\n    if (typeof input.val === \"string\") {\r\n        val = input.val;\r\n    }\r\n    else {\r\n        val = input.val.get();\r\n    }\r\n    val = val.split(\"\").reverse().join(\"\");\r\n    return new types_1.String().set(val);\r\n}\r\nexports.reverse = reverse;\r\n//# sourceMappingURL=reverse.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/reverse.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/round.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/round.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.round = void 0;\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction round(input) {\r\n    let mode = input.mode;\r\n    if (mode === undefined) {\r\n        mode = 1;\r\n    }\r\n    else if (typeof mode !== \"number\") {\r\n        mode = mode === null || mode === void 0 ? void 0 : mode.get();\r\n    }\r\n    const val = (0, _parse_1.parse)(input.val);\r\n    //  let dec = parse(input.dec);\r\n    const ret = new types_1.Float();\r\n    switch (mode) {\r\n        case 1:\r\n            ret.set(Math.ceil(val));\r\n            break;\r\n        case 4:\r\n            ret.set(-Math.round(-val));\r\n            break;\r\n        default:\r\n            throw \"round(), unknown mode\";\r\n    }\r\n    return ret;\r\n}\r\nexports.round = round;\r\n//# sourceMappingURL=round.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/round.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/shift_left.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/shift_left.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.shift_left = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction shift_left(input) {\r\n    let val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    const sub = typeof input.sub === \"string\" ? input.sub : input.sub.get();\r\n    while (val.startsWith(sub)) {\r\n        val = val.substr(sub.length);\r\n    }\r\n    return new string_1.String().set(val);\r\n}\r\nexports.shift_left = shift_left;\r\n//# sourceMappingURL=shift_left.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/shift_left.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/sign.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/sign.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sign = void 0;\r\nfunction sign(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.sign(num_in);\r\n}\r\nexports.sign = sign;\r\n//# sourceMappingURL=sign.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/sign.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/sin.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/sin.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sin = void 0;\r\n/* eslint-disable radix */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction sin(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else if (input.val instanceof types_1.Float) {\r\n        num_in = input.val.getRaw();\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.sin(num_in);\r\n}\r\nexports.sin = sin;\r\n//# sourceMappingURL=sin.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/sin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/sqrt.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/sqrt.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sqrt = void 0;\r\n/* eslint-disable radix */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction sqrt(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else if (input.val instanceof types_1.Float) {\r\n        num_in = input.val.getRaw();\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.sqrt(num_in);\r\n}\r\nexports.sqrt = sqrt;\r\n//# sourceMappingURL=sqrt.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/sqrt.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/strlen.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/strlen.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.strlen = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction strlen(input) {\r\n    let str = \"\";\r\n    if (typeof input.val === \"string\") {\r\n        str = input.val;\r\n    }\r\n    else {\r\n        str = input.val.get();\r\n    }\r\n    return new types_1.Integer().set(str.length);\r\n}\r\nexports.strlen = strlen;\r\n//# sourceMappingURL=strlen.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/strlen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/substring.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/substring.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.substring = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction substring(input) {\r\n    var _a, _b;\r\n    let off = (_a = input === null || input === void 0 ? void 0 : input.off) === null || _a === void 0 ? void 0 : _a.get();\r\n    if (off === undefined) {\r\n        off = 0;\r\n    }\r\n    const len = (_b = input === null || input === void 0 ? void 0 : input.len) === null || _b === void 0 ? void 0 : _b.get();\r\n    let sub = \"\";\r\n    if (typeof input.val === \"string\") {\r\n        sub = input.val.substr(off, len);\r\n    }\r\n    else {\r\n        sub = input.val.getOffset({ offset: off, length: len }).get();\r\n    }\r\n    return new string_1.String().set(sub);\r\n}\r\nexports.substring = substring;\r\n//# sourceMappingURL=substring.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/substring.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/substring_after.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/substring_after.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.substring_after = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction substring_after(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    let reg = \"\";\r\n    if (typeof input.regex === \"string\") {\r\n        reg = input.regex;\r\n    }\r\n    else if (input === null || input === void 0 ? void 0 : input.regex) {\r\n        reg = input.regex.get();\r\n    }\r\n    else if (typeof input.sub === \"string\") {\r\n        reg = input.sub;\r\n    }\r\n    else if (input === null || input === void 0 ? void 0 : input.sub) {\r\n        reg = input.sub.get();\r\n    }\r\n    const r = new RegExp(reg + \"(.*)\");\r\n    const res = val.match(r);\r\n    let ret = \"\";\r\n    if (res && res[1]) {\r\n        ret = res[1];\r\n    }\r\n    return new string_1.String().set(ret);\r\n}\r\nexports.substring_after = substring_after;\r\n//# sourceMappingURL=substring_after.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/substring_after.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/substring_before.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/substring_before.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.substring_before = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction substring_before(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    let reg = \"\";\r\n    if (typeof input.regex === \"string\") {\r\n        reg = input.regex;\r\n    }\r\n    else if (input === null || input === void 0 ? void 0 : input.regex) {\r\n        reg = input.regex.get();\r\n    }\r\n    else if (typeof input.sub === \"string\") {\r\n        reg = input.sub;\r\n    }\r\n    else if (input === null || input === void 0 ? void 0 : input.sub) {\r\n        reg = input.sub.get();\r\n    }\r\n    const r = new RegExp(\"(.*?)\" + reg);\r\n    const res = val.match(r);\r\n    let ret = \"\";\r\n    if (res && res[1]) {\r\n        ret = res[1];\r\n    }\r\n    return new string_1.String().set(ret);\r\n}\r\nexports.substring_before = substring_before;\r\n//# sourceMappingURL=substring_before.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/substring_before.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/sy.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/sy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sy = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nexports.sy = new types_1.Structure({\r\n    abcde: new types_1.Character({ length: 26 }).set(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"),\r\n    datlo: new types_1.Date(),\r\n    datum: new types_1.Date(),\r\n    dbcnt: new types_1.Integer(),\r\n    fdpos: new types_1.Integer(),\r\n    index: new types_1.Integer(),\r\n    langu: new types_1.Character({ length: 1 }).set(\"E\"),\r\n    mandt: new types_1.Character({ length: 3 }).set(\"123\"),\r\n    msgid: new types_1.Character({ length: 20 }),\r\n    msgno: new types_1.Numc({ length: 3 }),\r\n    msgty: new types_1.Character({ length: 1 }),\r\n    msgv1: new types_1.Character({ length: 50 }),\r\n    msgv2: new types_1.Character({ length: 50 }),\r\n    msgv3: new types_1.Character({ length: 50 }),\r\n    msgv4: new types_1.Character({ length: 50 }),\r\n    subrc: new types_1.Integer(),\r\n    sysid: new types_1.Character({ length: 3 }).set(\"ABC\"),\r\n    tabix: new types_1.Integer(),\r\n    timlo: new types_1.Time(),\r\n    tzone: new types_1.Integer(),\r\n    uname: new types_1.Character({ length: 12 }).set(\"USERNAME\"),\r\n    uzeit: new types_1.Time(),\r\n});\r\n//# sourceMappingURL=sy.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/sy.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/tan.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/tan.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.tan = void 0;\r\n/* eslint-disable radix */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction tan(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else if (input.val instanceof types_1.Float) {\r\n        num_in = input.val.getRaw();\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.tan(num_in);\r\n}\r\nexports.tan = tan;\r\n//# sourceMappingURL=tan.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/tan.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/to_lower.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/to_lower.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.to_lower = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction to_lower(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    return new types_1.String().set(val.toLowerCase());\r\n}\r\nexports.to_lower = to_lower;\r\n//# sourceMappingURL=to_lower.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/to_lower.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/to_mixed.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/to_mixed.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.to_mixed = void 0;\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction to_mixed(input) {\r\n    let sep = input.sep;\r\n    if (sep === undefined) {\r\n        sep = \"_\";\r\n    }\r\n    if (typeof sep !== \"string\") {\r\n        sep = sep.get();\r\n    }\r\n    if (sep.length === 0) {\r\n        throw \"CX_SY_STRG_PAR_VAL\";\r\n    }\r\n    const min = 1;\r\n    if (min < 0) {\r\n        throw \"CX_SY_STRG_PAR_VAL\";\r\n    }\r\n    let val = input.val;\r\n    if (typeof val !== \"string\") {\r\n        val = val.get();\r\n    }\r\n    val = val.substring(0, min) + val.substring(min).toLowerCase();\r\n    if (input.case) {\r\n        if (typeof input.case === \"string\") {\r\n            if (input.case === input.case.toLowerCase()) {\r\n                val = val.substring(0, 1).toLowerCase() + val.substring(1);\r\n            }\r\n        }\r\n        else {\r\n            if (input.case.get() === input.case.get().toLowerCase()) {\r\n                val = val.substring(0, 1).toLowerCase() + val.substring(1);\r\n            }\r\n        }\r\n    }\r\n    const length = sep.length;\r\n    const regex = new RegExp(sep + \"\\\\w\");\r\n    while (val.match(regex)) {\r\n        val = val.replace(regex, (x) => {\r\n            return x.substring(length).toUpperCase();\r\n        });\r\n    }\r\n    return new types_1.String().set(val);\r\n}\r\nexports.to_mixed = to_mixed;\r\n//# sourceMappingURL=to_mixed.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/to_mixed.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/to_upper.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/to_upper.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.to_upper = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction to_upper(input) {\r\n    const val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    return new types_1.String().set(val.toUpperCase());\r\n}\r\nexports.to_upper = to_upper;\r\n//# sourceMappingURL=to_upper.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/to_upper.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/translate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/translate.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.translate = void 0;\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction translate(input) {\r\n    let val = typeof input.val === \"string\" ? input.val : input.val.get();\r\n    const from = typeof input.from === \"string\" ? input.from : input.from.get();\r\n    const to = typeof input.to === \"string\" ? input.to : input.to.get();\r\n    const fromSplit = from.split(\"\");\r\n    const toSplit = to.split(\"\");\r\n    const chars = {};\r\n    for (let i = 0; i < fromSplit.length; i++) {\r\n        chars[fromSplit[i]] = toSplit[i] || \"\";\r\n    }\r\n    const reg = new RegExp(\"[\" + from + \"]\", \"g\");\r\n    val = val.replace(reg, m => chars[m] || \"\");\r\n    return new string_1.String().set(val);\r\n}\r\nexports.translate = translate;\r\n//# sourceMappingURL=translate.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/translate.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/trunc.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/trunc.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.trunc = void 0;\r\nfunction trunc(input) {\r\n    let num_in = undefined;\r\n    if (typeof input.val === \"number\") {\r\n        num_in = input.val;\r\n    }\r\n    else if (typeof input.val === \"string\") {\r\n        num_in = parseFloat(input.val);\r\n    }\r\n    else {\r\n        num_in = parseFloat(input.val.get().toString());\r\n    }\r\n    return Math.trunc(num_in);\r\n}\r\nexports.trunc = trunc;\r\n//# sourceMappingURL=trunc.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/trunc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/builtin/xstrlen.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/builtin/xstrlen.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.xstrlen = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction xstrlen(input) {\r\n    if (typeof input.val === \"string\") {\r\n        return new types_1.Integer().set(input.val.length / 2);\r\n    }\r\n    else {\r\n        return new types_1.Integer().set(input.val.get().length / 2);\r\n    }\r\n}\r\nexports.xstrlen = xstrlen;\r\n//# sourceMappingURL=xstrlen.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/builtin/xstrlen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/clone.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/clone.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.clone = void 0;\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction clone(obj) {\r\n    if (null == obj || \"object\" != typeof obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof types_1.ABAPObject) {\r\n        const n = new types_1.ABAPObject();\r\n        n.set(obj.get());\r\n        // @ts-ignore\r\n        return n;\r\n    }\r\n    else if (obj instanceof types_1.DataReference) {\r\n        const n = new types_1.DataReference(obj.getType());\r\n        n.assign(obj.getPointer());\r\n        // @ts-ignore\r\n        return n;\r\n    }\r\n    // @ts-ignore\r\n    const copy = new obj.constructor();\r\n    for (const attr in obj) {\r\n        // @ts-ignore\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (obj.hasOwnProperty(attr)) {\r\n            if (null == obj[attr] || \"object\" != typeof obj[attr]) {\r\n                copy[attr] = obj[attr];\r\n            }\r\n            else {\r\n                copy[attr] = clone(obj[attr]);\r\n            }\r\n        }\r\n    }\r\n    return copy;\r\n}\r\nexports.clone = clone;\r\n//# sourceMappingURL=clone.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/clone.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/assigned.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/assigned.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.assigned = void 0;\r\nfunction assigned(val) {\r\n    return val.isAssigned();\r\n}\r\nexports.assigned = assigned;\r\n//# sourceMappingURL=assigned.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/assigned.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/between.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/between.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.between = void 0;\r\nconst ge_1 = __webpack_require__(/*! ./ge */ \"./node_modules/@abaplint/runtime/build/src/compare/ge.js\");\r\nconst le_1 = __webpack_require__(/*! ./le */ \"./node_modules/@abaplint/runtime/build/src/compare/le.js\");\r\nfunction between(left, and1, and2) {\r\n    return (0, ge_1.ge)(left, and1) && (0, le_1.le)(left, and2);\r\n}\r\nexports.between = between;\r\n//# sourceMappingURL=between.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/between.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/ca.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/ca.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ca = void 0;\r\nfunction ca(left, right) {\r\n    let l = \"\";\r\n    if (typeof left === \"number\" || typeof left === \"string\") {\r\n        l = left.toString();\r\n    }\r\n    else {\r\n        l = left.get().toString();\r\n    }\r\n    if (l === \"\") {\r\n        l = \" \";\r\n    }\r\n    let r = \"\";\r\n    if (typeof right === \"string\") {\r\n        r = right.toString();\r\n    }\r\n    else {\r\n        r = right.get().toString();\r\n    }\r\n    const split = r.split(\"\");\r\n    return split.some(c => l.includes(c));\r\n}\r\nexports.ca = ca;\r\n//# sourceMappingURL=ca.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/ca.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/cn.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/cn.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.cn = void 0;\r\nconst co_1 = __webpack_require__(/*! ./co */ \"./node_modules/@abaplint/runtime/build/src/compare/co.js\");\r\nfunction cn(left, right) {\r\n    return (0, co_1.co)(left, right) === false;\r\n}\r\nexports.cn = cn;\r\n//# sourceMappingURL=cn.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/cn.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/co.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/co.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.co = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction co(left, right) {\r\n    let l = \"\";\r\n    if (typeof left === \"number\" || typeof left === \"string\") {\r\n        l = left.toString();\r\n    }\r\n    else {\r\n        l = left.get().toString();\r\n    }\r\n    let r = \"\";\r\n    if (typeof right === \"string\") {\r\n        r = right.toString();\r\n    }\r\n    else if (right instanceof types_1.Structure) {\r\n        r = Object.values(right.get()).map((a) => a.get()).join(\"\");\r\n    }\r\n    else {\r\n        r = right.get().toString();\r\n    }\r\n    const characters = r.split(\"\");\r\n    return l.split(\"\").every(c => characters.includes(c));\r\n}\r\nexports.co = co;\r\n//# sourceMappingURL=co.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/co.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/cp.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/cp.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.cp = void 0;\r\nfunction cp(left, right) {\r\n    let l = \"\";\r\n    if (typeof left === \"number\" || typeof left === \"string\") {\r\n        l = left.toString();\r\n    }\r\n    else {\r\n        l = left.get().toString();\r\n    }\r\n    let r = \"\";\r\n    if (typeof right === \"string\") {\r\n        r = right.toString();\r\n    }\r\n    else {\r\n        r = right.get().toString();\r\n    }\r\n    r = r.replace(/\\\\/g, \"\\\\\\\\\");\r\n    r = r.replace(/\\[/g, \"\\\\[\");\r\n    r = r.replace(/\\]/g, \"\\\\]\");\r\n    r = r.replace(/\\?/g, \"\\\\?\");\r\n    r = r.replace(/\\(/g, \"\\\\(\");\r\n    r = r.replace(/\\)/g, \"\\\\)\");\r\n    r = r.replace(/\\./g, \"\\\\.\");\r\n    r = r.replace(/\\|/g, \"\\\\|\");\r\n    r = r.replace(/\\*/g, \"[\\\\s\\\\S]*\");\r\n    r = r.replace(/\\+/g, \"[\\\\s\\\\S]+\");\r\n    const reg = new RegExp(\"^\" + r + \"$\", \"i\");\r\n    return l.match(reg) !== null;\r\n}\r\nexports.cp = cp;\r\n//# sourceMappingURL=cp.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/cp.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/cs.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/cs.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.cs = void 0;\r\nfunction cs(left, right) {\r\n    let l = \"\";\r\n    if (typeof left === \"number\" || typeof left === \"string\") {\r\n        l = left.toString();\r\n    }\r\n    else {\r\n        l = left.get().toString();\r\n    }\r\n    l = l.toUpperCase();\r\n    let r = \"\";\r\n    if (typeof right === \"string\") {\r\n        r = right.toString();\r\n    }\r\n    else {\r\n        r = right.get().toString();\r\n    }\r\n    r = r.toUpperCase();\r\n    const index = l.indexOf(r);\r\n    if (index < 0) {\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().fdpos.set(l.length);\r\n        return false;\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().fdpos.set(index);\r\n        return true;\r\n    }\r\n}\r\nexports.cs = cs;\r\n//# sourceMappingURL=cs.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/cs.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/eq.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/eq.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.eq = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction compareTables(left, right) {\r\n    const leftArray = left.array();\r\n    const rightArray = right.array();\r\n    if (leftArray.length !== rightArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < leftArray.length; i++) {\r\n        const rowCompare = eq(leftArray[i], rightArray[i]);\r\n        if (rowCompare === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction eq(left, right) {\r\n    /*\r\n      console.dir(left);\r\n      console.dir(right);\r\n    */\r\n    if (right instanceof types_1.FieldSymbol) {\r\n        return eq(left, right.getPointer());\r\n    }\r\n    else if (left instanceof types_1.FieldSymbol) {\r\n        return eq(left.getPointer(), right);\r\n    }\r\n    if (left instanceof types_1.Table || right instanceof types_1.Table) {\r\n        if (left instanceof types_1.Table && right instanceof types_1.Table) {\r\n            return compareTables(left, right);\r\n        }\r\n        else {\r\n            // this happens in dynamic/ANY typed scenarios?\r\n            return false;\r\n        }\r\n    }\r\n    if (left instanceof types_1.Structure || right instanceof types_1.Structure) {\r\n        if (!(right instanceof types_1.Structure)) {\r\n            return false;\r\n        }\r\n        if (!(left instanceof types_1.Structure)) {\r\n            return false;\r\n        }\r\n        const l = left.get();\r\n        const r = right.get();\r\n        const leftKeys = Object.keys(l);\r\n        const rightKeys = Object.keys(r);\r\n        if (leftKeys.length !== rightKeys.length) {\r\n            return false;\r\n        }\r\n        for (const k of leftKeys) {\r\n            const e = eq(l[k], r[k]);\r\n            if (e === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    let l = undefined;\r\n    if (left instanceof types_1.Character) {\r\n        l = left.get().replace(/ *$/, \"\");\r\n    }\r\n    else if (typeof left === \"object\") {\r\n        l = left.get();\r\n    }\r\n    else {\r\n        l = left;\r\n    }\r\n    let r = undefined;\r\n    if (right instanceof types_1.Character) {\r\n        r = right.get().replace(/ *$/, \"\");\r\n    }\r\n    else if (typeof right === \"object\") {\r\n        r = right.get();\r\n    }\r\n    else {\r\n        r = right;\r\n    }\r\n    if (right instanceof types_1.Hex && typeof l === \"number\") {\r\n        r = parseInt(right.get(), 16);\r\n    }\r\n    else if (left instanceof types_1.Hex && typeof r === \"number\") {\r\n        l = parseInt(left.get(), 16);\r\n    }\r\n    if (right instanceof types_1.Float && left instanceof types_1.Float) {\r\n        r = right.getRaw();\r\n        l = left.getRaw();\r\n    }\r\n    else if (right instanceof types_1.Float && typeof l === \"number\") {\r\n        r = right.getRaw();\r\n    }\r\n    else if (left instanceof types_1.Float) {\r\n        if (typeof r === \"number\") {\r\n            l = left.getRaw();\r\n        }\r\n        else if (typeof r === \"string\") {\r\n            l = left.getRaw();\r\n            r = Number(r);\r\n        }\r\n    }\r\n    // assumption: typically no casts are required, so start checking if the types doesnt match\r\n    if (typeof l !== typeof r) {\r\n        if (typeof l === \"string\" && typeof r === \"number\") {\r\n            r = r.toString();\r\n        }\r\n        else if (typeof l === \"number\" && typeof r === \"string\") {\r\n            if (r === \"\") {\r\n                r = 0;\r\n            }\r\n            else {\r\n                r = parseInt(r, 10);\r\n            }\r\n        }\r\n    }\r\n    /*\r\n      console.dir(l);\r\n      console.dir(r);\r\n    */\r\n    return l === r;\r\n}\r\nexports.eq = eq;\r\n//# sourceMappingURL=eq.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/eq.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/ge.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/ge.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ge = void 0;\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nfunction ge(left, right) {\r\n    return (0, _1.gt)(left, right) || (0, _1.eq)(left, right);\r\n}\r\nexports.ge = ge;\r\n//# sourceMappingURL=ge.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/ge.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/gt.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/gt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.gt = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst integer_1 = __webpack_require__(/*! ../types/integer */ \"./node_modules/@abaplint/runtime/build/src/types/integer.js\");\r\nfunction gt(left, right) {\r\n    if (left instanceof types_1.Table || right instanceof types_1.Table) {\r\n        throw \"runtime_todo, gt TABLE\";\r\n    }\r\n    if (left instanceof types_1.Hex || right instanceof types_1.Hex) {\r\n        return gt_with_hex(left, right);\r\n    }\r\n    let l = undefined;\r\n    if (typeof left === \"number\" || typeof left === \"string\") {\r\n        l = left;\r\n    }\r\n    else if (left instanceof types_1.Float) {\r\n        l = left.getRaw();\r\n    }\r\n    else {\r\n        l = left.get();\r\n    }\r\n    let r = undefined;\r\n    if (typeof right === \"number\" || typeof right === \"string\") {\r\n        r = right;\r\n    }\r\n    else if (right instanceof types_1.Float) {\r\n        r = right.getRaw();\r\n    }\r\n    else {\r\n        r = right.get();\r\n    }\r\n    if (typeof l === \"string\" && typeof r === \"number\") {\r\n        if (l === \"\") {\r\n            l = 0;\r\n        }\r\n        else {\r\n            l = parseInt(l, 10);\r\n        }\r\n    }\r\n    else if (typeof l === \"number\" && typeof r === \"string\") {\r\n        if (r === \"\") {\r\n            r = 0;\r\n        }\r\n        else {\r\n            r = parseInt(r, 10);\r\n        }\r\n    }\r\n    if (l === undefined) {\r\n        return true; // todo, not sure this is correct\r\n    }\r\n    if (r === undefined) {\r\n        return true; // todo, not sure this is correct\r\n    }\r\n    return l > r;\r\n}\r\nexports.gt = gt;\r\nfunction gt_with_hex(left, right) {\r\n    const left_hex = get_hex_from_parameter(left);\r\n    const right_hex = get_hex_from_parameter(right);\r\n    return left_hex > right_hex;\r\n}\r\nfunction get_hex_from_parameter(comparison_part) {\r\n    let hex_from_parameter = \"\";\r\n    switch (typeof comparison_part) {\r\n        case \"number\":\r\n            hex_from_parameter = comparison_part.toString(16);\r\n            break;\r\n        case \"string\":\r\n            hex_from_parameter = comparison_part.split(\"\")\r\n                .map(c => c.charCodeAt(0).toString(16).padStart(2, \"0\"))\r\n                .join(\"\");\r\n            break;\r\n        case \"object\":\r\n            if (comparison_part instanceof types_1.Hex) {\r\n                hex_from_parameter = comparison_part.get();\r\n            }\r\n            else if (comparison_part instanceof integer_1.Integer) {\r\n                hex_from_parameter = comparison_part.get().toString(16).toUpperCase();\r\n                if (hex_from_parameter.length % 2 === 1) {\r\n                    hex_from_parameter = \"0\" + hex_from_parameter;\r\n                }\r\n            }\r\n            else {\r\n                throw \"runtime_todo, gt hex\";\r\n            }\r\n            break;\r\n        default:\r\n            throw \"runtime_todo, gt hex\";\r\n    }\r\n    return hex_from_parameter;\r\n}\r\n//# sourceMappingURL=gt.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/gt.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/in.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/in.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.compareIn = void 0;\r\nconst eq_1 = __webpack_require__(/*! ./eq */ \"./node_modules/@abaplint/runtime/build/src/compare/eq.js\");\r\nfunction compareIn(left, right) {\r\n    if (right.array().length === 0) {\r\n        return true;\r\n    }\r\n    for (const row of right.array()) {\r\n        if ((0, eq_1.eq)(row.get()[\"sign\"], \"I\")\r\n            && (0, eq_1.eq)(row.get()[\"option\"], \"EQ\")\r\n            && (0, eq_1.eq)(row.get()[\"low\"], left)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.compareIn = compareIn;\r\n//# sourceMappingURL=in.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/in.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports[\"in\"] = void 0;\r\n__exportStar(__webpack_require__(/*! ./assigned */ \"./node_modules/@abaplint/runtime/build/src/compare/assigned.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./between */ \"./node_modules/@abaplint/runtime/build/src/compare/between.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ca */ \"./node_modules/@abaplint/runtime/build/src/compare/ca.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cn */ \"./node_modules/@abaplint/runtime/build/src/compare/cn.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./co */ \"./node_modules/@abaplint/runtime/build/src/compare/co.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cp */ \"./node_modules/@abaplint/runtime/build/src/compare/cp.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cs */ \"./node_modules/@abaplint/runtime/build/src/compare/cs.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./eq */ \"./node_modules/@abaplint/runtime/build/src/compare/eq.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ge */ \"./node_modules/@abaplint/runtime/build/src/compare/ge.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gt */ \"./node_modules/@abaplint/runtime/build/src/compare/gt.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./initial */ \"./node_modules/@abaplint/runtime/build/src/compare/initial.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./le */ \"./node_modules/@abaplint/runtime/build/src/compare/le.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./lt */ \"./node_modules/@abaplint/runtime/build/src/compare/lt.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ne */ \"./node_modules/@abaplint/runtime/build/src/compare/ne.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./na */ \"./node_modules/@abaplint/runtime/build/src/compare/na.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ns */ \"./node_modules/@abaplint/runtime/build/src/compare/ns.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./np */ \"./node_modules/@abaplint/runtime/build/src/compare/np.js\"), exports);\r\nvar in_1 = __webpack_require__(/*! ./in */ \"./node_modules/@abaplint/runtime/build/src/compare/in.js\");\r\nObject.defineProperty(exports, \"in\", ({ enumerable: true, get: function () { return in_1.compareIn; } }));\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/initial.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/initial.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.initial = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction initial(val) {\r\n    // todo, refactor? add as method in each type instead?\r\n    if (val instanceof types_1.Table) {\r\n        return val.array().length === 0;\r\n    }\r\n    else if (val instanceof types_1.DataReference) {\r\n        return val.getPointer() === undefined;\r\n    }\r\n    else if (val instanceof types_1.Date) {\r\n        return val.get() === \"00000000\";\r\n    }\r\n    else if (val instanceof types_1.Numc) {\r\n        return val.get().match(/^0+$/) !== null;\r\n    }\r\n    else if (val instanceof types_1.Hex) {\r\n        return val.get().match(/^0+$/) !== null;\r\n    }\r\n    else if (val instanceof types_1.Time) {\r\n        return val.get() === \"000000\";\r\n    }\r\n    if (typeof val === \"string\") {\r\n        return val === \"\";\r\n    }\r\n    else if (typeof val === \"number\") {\r\n        return val === 0;\r\n    }\r\n    const value = val.get();\r\n    if (typeof value === \"string\") {\r\n        return value === \"\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return value === 0;\r\n    }\r\n    else if (val instanceof types_1.ABAPObject) {\r\n        return value === undefined;\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        for (const f of Object.keys(value)) {\r\n            if (initial(value[f]) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"runtime, initial, missing implementation\");\r\n    }\r\n}\r\nexports.initial = initial;\r\n//# sourceMappingURL=initial.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/initial.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/le.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/le.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.le = void 0;\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nfunction le(left, right) {\r\n    return (0, _1.lt)(left, right) || (0, _1.eq)(left, right);\r\n}\r\nexports.le = le;\r\n//# sourceMappingURL=le.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/le.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/lt.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/lt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.lt = void 0;\r\nconst gt_1 = __webpack_require__(/*! ./gt */ \"./node_modules/@abaplint/runtime/build/src/compare/gt.js\");\r\nfunction lt(left, right) {\r\n    return (0, gt_1.gt)(right, left);\r\n}\r\nexports.lt = lt;\r\n//# sourceMappingURL=lt.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/lt.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/na.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/na.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.na = void 0;\r\nconst ca_1 = __webpack_require__(/*! ./ca */ \"./node_modules/@abaplint/runtime/build/src/compare/ca.js\");\r\nfunction na(left, right) {\r\n    return !(0, ca_1.ca)(left, right);\r\n}\r\nexports.na = na;\r\n//# sourceMappingURL=na.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/na.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/ne.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/ne.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ne = void 0;\r\nconst eq_1 = __webpack_require__(/*! ./eq */ \"./node_modules/@abaplint/runtime/build/src/compare/eq.js\");\r\nfunction ne(left, right) {\r\n    return !(0, eq_1.eq)(left, right);\r\n}\r\nexports.ne = ne;\r\n//# sourceMappingURL=ne.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/ne.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/np.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/np.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.np = void 0;\r\nconst cp_1 = __webpack_require__(/*! ./cp */ \"./node_modules/@abaplint/runtime/build/src/compare/cp.js\");\r\nfunction np(left, right) {\r\n    return !(0, cp_1.cp)(left, right);\r\n}\r\nexports.np = np;\r\n//# sourceMappingURL=np.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/np.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/compare/ns.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/compare/ns.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ns = void 0;\r\nconst cs_1 = __webpack_require__(/*! ./cs */ \"./node_modules/@abaplint/runtime/build/src/compare/cs.js\");\r\nfunction ns(left, right) {\r\n    return !(0, cs_1.cs)(left, right);\r\n}\r\nexports.ns = ns;\r\n//# sourceMappingURL=ns.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/compare/ns.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/console.js":
/*!*************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/console.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Console = void 0;\r\nclass Console {\r\n    constructor() {\r\n        this.data = \"\";\r\n    }\r\n    clear() {\r\n        this.data = \"\";\r\n    }\r\n    add(data) {\r\n        this.data = this.data + data;\r\n    }\r\n    get() {\r\n        return this.data;\r\n    }\r\n    getTrimmed() {\r\n        return this.data.split(\"\\n\").map(a => a.trimEnd()).join(\"\\n\");\r\n    }\r\n}\r\nexports.Console = Console;\r\n//# sourceMappingURL=console.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/console.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/context.js":
/*!*************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/context.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Context = void 0;\r\nclass Context {\r\n    constructor() {\r\n        // DEFAULT and secondary database connections\r\n        this.databaseConnections = {};\r\n        this.RFCDestinations = {};\r\n    }\r\n    defaultDB() {\r\n        if (this.databaseConnections[\"DEFAULT\"] === undefined) {\r\n            throw new Error(\"Runtime, database not initialized\");\r\n        }\r\n        return this.databaseConnections[\"DEFAULT\"];\r\n    }\r\n}\r\nexports.Context = Context;\r\n//# sourceMappingURL=context.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/context.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/db/db.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/db/db.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=db.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/db/db.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAP = exports.DB = exports.types = exports.RFC = exports.UnitTestResult = void 0;\r\nconst console_1 = __webpack_require__(/*! ./console */ \"./node_modules/@abaplint/runtime/build/src/console.js\");\r\nconst context_1 = __webpack_require__(/*! ./context */ \"./node_modules/@abaplint/runtime/build/src/context.js\");\r\nconst offset_length_1 = __webpack_require__(/*! ./offset_length */ \"./node_modules/@abaplint/runtime/build/src/offset_length.js\");\r\nconst statements_1 = __webpack_require__(/*! ./statements */ \"./node_modules/@abaplint/runtime/build/src/statements/index.js\");\r\nconst template_formatting_1 = __webpack_require__(/*! ./template_formatting */ \"./node_modules/@abaplint/runtime/build/src/template_formatting.js\");\r\nconst unit_test_1 = __webpack_require__(/*! ./unit_test */ \"./node_modules/@abaplint/runtime/build/src/unit_test.js\");\r\nObject.defineProperty(exports, \"UnitTestResult\", ({ enumerable: true, get: function () { return unit_test_1.UnitTestResult; } }));\r\nconst builtin = __webpack_require__(/*! ./builtin */ \"./node_modules/@abaplint/runtime/build/src/builtin/index.js\");\r\nconst compare = __webpack_require__(/*! ./compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nconst DB = __webpack_require__(/*! ./db/db */ \"./node_modules/@abaplint/runtime/build/src/db/db.js\");\r\nexports.DB = DB;\r\nconst operators = __webpack_require__(/*! ./operators */ \"./node_modules/@abaplint/runtime/build/src/operators/index.js\");\r\nconst RFC = __webpack_require__(/*! ./rfc */ \"./node_modules/@abaplint/runtime/build/src/rfc.js\");\r\nexports.RFC = RFC;\r\nconst types = __webpack_require__(/*! ./types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nexports.types = types;\r\nclass ABAP {\r\n    constructor() {\r\n        // global objects\r\n        this.FunctionModules = {};\r\n        this.Classes = {};\r\n        this.Interfaces = {};\r\n        this.DDIC = {};\r\n        this.types = types;\r\n        this.builtin = builtin;\r\n        this.operators = operators;\r\n        this.compare = compare;\r\n        this.OffsetLength = offset_length_1.OffsetLength;\r\n        this.templateFormatting = template_formatting_1.templateFormatting;\r\n        this.context = new context_1.Context();\r\n        this.console = new console_1.Console();\r\n        this.context.console = this.console;\r\n        this.statements = new statements_1.Statements(this.context);\r\n        // todo, this should not be a singleton, it should be part of this instance\r\n        // todo, move to context\r\n        builtin.sy.get().subrc.set(0);\r\n        builtin.sy.get().tabix.set(0);\r\n        builtin.sy.get().index.set(0);\r\n        this.statements.getTime({ sy: builtin.sy });\r\n    }\r\n}\r\nexports.ABAP = ABAP;\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/offset_length.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/offset_length.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OffsetLength = void 0;\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nclass OffsetLength {\r\n    constructor(obj, options) {\r\n        this.obj = obj;\r\n        this.isHex = obj instanceof types_1.Hex || obj instanceof types_1.XString;\r\n        if (options.offset) {\r\n            if (typeof options.offset === \"number\") {\r\n                this.offset = options.offset;\r\n            }\r\n            else {\r\n                this.offset = options.offset.get();\r\n            }\r\n            if (this.isHex) {\r\n                this.offset *= 2;\r\n            }\r\n        }\r\n        if (options.length) {\r\n            if (typeof options.length === \"number\") {\r\n                this.length = options.length;\r\n            }\r\n            else {\r\n                this.length = options.length.get();\r\n            }\r\n            if (this.isHex) {\r\n                this.length *= 2;\r\n            }\r\n        }\r\n    }\r\n    get() {\r\n        return this.obj.getOffset({ offset: this.offset, length: this.length }).get();\r\n    }\r\n    set(value) {\r\n        let val = \"\";\r\n        if (typeof value === \"string\") {\r\n            val = value;\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            val = value + \"\";\r\n        }\r\n        else if (value instanceof types_1.Integer) {\r\n            val = value.get() + \"\";\r\n            if (this.isHex) {\r\n                val = Number(val).toString(16);\r\n            }\r\n        }\r\n        else {\r\n            val = value.get() + \"\";\r\n        }\r\n        let old = this.obj.get();\r\n        if (this.obj instanceof types_1.Character) {\r\n            old = old.padEnd(this.obj.getLength(), \" \");\r\n        }\r\n        if (this.length) {\r\n            val = val.substr(0, this.length);\r\n            if (this.isHex || this.obj instanceof types_1.Time) {\r\n                val = val.padStart(this.length, \"0\");\r\n            }\r\n        }\r\n        if (this.length && this.offset) {\r\n            old = old.substr(0, this.offset) + val + old.substr(this.offset + this.length);\r\n        }\r\n        else if (this.length) {\r\n            old = val + old.substr(this.length);\r\n        }\r\n        else if (this.offset) {\r\n            old = old.substr(0, this.offset) + val;\r\n        }\r\n        old = old.trimEnd();\r\n        if (this.obj instanceof types_1.Character) {\r\n            old = old.padEnd(this.obj.getLength(), \" \");\r\n        }\r\n        this.obj.set(old);\r\n    }\r\n}\r\nexports.OffsetLength = OffsetLength;\r\n//# sourceMappingURL=offset_length.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/offset_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/_bit_operations.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/_bit_operations.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.get_bit_operation_chunks = void 0;\r\nfunction get_bit_operation_chunks(left, right) {\r\n    const ret = [];\r\n    let leftFull = left.get();\r\n    const leftLen = leftFull.length;\r\n    leftFull = leftFull.padEnd(Math.ceil(leftLen / 2) * 2, \"0\");\r\n    let rightFull = right.get();\r\n    const rightLen = rightFull.length;\r\n    rightFull = rightFull.padEnd(Math.ceil(rightLen / 2) * 2, \"0\");\r\n    const maxLen = leftFull.length > rightFull.length ? leftFull.length : rightFull.length;\r\n    // Using 3-byte chunkgs (6 hex positions) to avoid JavaScript negative values for extreme cases\r\n    const chunks = maxLen / 6;\r\n    for (let pass = chunks; pass > 0; pass--) {\r\n        const chunkStart = maxLen - pass * 6;\r\n        const chunkEnd = maxLen - (pass - 1) * 6;\r\n        let leftSlice = leftFull.slice(chunkStart, chunkEnd);\r\n        let rightSlice = rightFull.slice(chunkStart, chunkEnd);\r\n        const chunkLen = leftSlice.length > rightSlice.length ? leftSlice.length : rightSlice.length;\r\n        leftSlice = leftSlice.padEnd(chunkLen, \"0\");\r\n        rightSlice = rightSlice.padEnd(chunkLen, \"0\");\r\n        const leftChunk = parseInt(leftSlice, 16);\r\n        const rightChunk = parseInt(rightSlice, 16);\r\n        ret.push({ leftChunk: leftChunk, rightChunk: rightChunk, chunkLen: chunkLen });\r\n    }\r\n    return ret;\r\n}\r\nexports.get_bit_operation_chunks = get_bit_operation_chunks;\r\n//# sourceMappingURL=_bit_operations.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/_bit_operations.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/_parse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/_parse.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.parse = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst xstring_1 = __webpack_require__(/*! ../types/xstring */ \"./node_modules/@abaplint/runtime/build/src/types/xstring.js\");\r\nfunction parse(val) {\r\n    if (typeof val === \"number\") {\r\n        return val;\r\n    }\r\n    else if (typeof val === \"string\") {\r\n        return parseInt(val, 10);\r\n    }\r\n    else if (val instanceof types_1.Float) {\r\n        return val.getRaw();\r\n    }\r\n    else if (val instanceof xstring_1.XString || val instanceof types_1.Hex) {\r\n        if (val.get() === \"\") {\r\n            return 0;\r\n        }\r\n        let num = parseInt(val.get(), 16);\r\n        // handle two complement,\r\n        if (val instanceof types_1.Hex && val.getLength() >= 4) {\r\n            const maxVal = Math.pow(2, val.get().length / 2 * 8);\r\n            if (num > maxVal / 2 - 1) {\r\n                num = num - maxVal;\r\n            }\r\n        }\r\n        return num;\r\n    }\r\n    else if (val instanceof types_1.Time || val instanceof types_1.Date) {\r\n        return val.getNumeric();\r\n    }\r\n    else {\r\n        return parse(val.get());\r\n    }\r\n}\r\nexports.parse = parse;\r\n//# sourceMappingURL=_parse.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/_parse.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/add.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/add.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.add = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nfunction add(left, right) {\r\n    if (left instanceof types_1.Integer && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() + right.get());\r\n    }\r\n    else if (typeof left === \"number\" && typeof right === \"number\"\r\n        && Number.isInteger(left) && Number.isInteger(right)) {\r\n        return new types_1.Integer().set(left + right);\r\n    }\r\n    else if (typeof left === \"number\" && Number.isInteger(left) && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left + right.get());\r\n    }\r\n    else if (typeof right === \"number\" && Number.isInteger(right) && left instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() + right);\r\n    }\r\n    else if (left instanceof string_1.String && Number.isInteger(Number(left.get())) && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(Number.parseInt(left.get(), 10) + right.get());\r\n    }\r\n    else if (right instanceof string_1.String && Number.isInteger(Number(right)) && left instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() + Number.parseInt(right.get(), 10));\r\n    }\r\n    return new types_1.Float().set((0, _parse_1.parse)(left) + (0, _parse_1.parse)(right));\r\n}\r\nexports.add = add;\r\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/add.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/bit-and.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/bit-and.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bitand = void 0;\r\n/*eslint no-bitwise: [\"error\", { \"allow\": [\"&\"] }] */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _bit_operations_1 = __webpack_require__(/*! ./_bit_operations */ \"./node_modules/@abaplint/runtime/build/src/operators/_bit_operations.js\");\r\nfunction bitand(left, right) {\r\n    let and = \"\";\r\n    const chunks = (0, _bit_operations_1.get_bit_operation_chunks)(left, right);\r\n    // eslint-disable-next-line no-cond-assign\r\n    for (let i = 0, chunk; chunk = chunks[i]; i++) {\r\n        and = and + (chunk.leftChunk & chunk.rightChunk).toString(16).toUpperCase().padStart(chunk.chunkLen, \"0\");\r\n    }\r\n    const ret = new types_1.XString();\r\n    ret.set(and);\r\n    return ret;\r\n}\r\nexports.bitand = bitand;\r\n//# sourceMappingURL=bit-and.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/bit-and.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/bit-not.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/bit-not.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bitnot = void 0;\r\n/*eslint no-bitwise: [\"error\", { \"allow\": [\"~\"] }] */\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction bitnot(right) {\r\n    const right16 = parseInt(right.get(), 16);\r\n    const not = ~right16;\r\n    const ret = new types_1.Hex({ length: right.get().length / 2 });\r\n    ret.set(not);\r\n    return ret;\r\n}\r\nexports.bitnot = bitnot;\r\n//# sourceMappingURL=bit-not.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/bit-not.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/bit-or.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/bit-or.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bitor = void 0;\r\n/*eslint no-bitwise: [\"error\", { \"allow\": [\"|\"] }] */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _bit_operations_1 = __webpack_require__(/*! ./_bit_operations */ \"./node_modules/@abaplint/runtime/build/src/operators/_bit_operations.js\");\r\nfunction bitor(left, right) {\r\n    let or = \"\";\r\n    const chunks = (0, _bit_operations_1.get_bit_operation_chunks)(left, right);\r\n    // eslint-disable-next-line no-cond-assign\r\n    for (let i = 0, chunk; chunk = chunks[i]; i++) {\r\n        or = or + (chunk.leftChunk | chunk.rightChunk).toString(16).toUpperCase().padStart(chunk.chunkLen, \"0\");\r\n    }\r\n    const ret = new types_1.XString();\r\n    ret.set(or);\r\n    return ret;\r\n}\r\nexports.bitor = bitor;\r\n//# sourceMappingURL=bit-or.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/bit-or.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/bit-xor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/bit-xor.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.bitxor = void 0;\r\n/*eslint no-bitwise: [\"error\", { \"allow\": [\"^\"] }] */\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _bit_operations_1 = __webpack_require__(/*! ./_bit_operations */ \"./node_modules/@abaplint/runtime/build/src/operators/_bit_operations.js\");\r\nfunction bitxor(left, right) {\r\n    let xor = \"\";\r\n    const chunks = (0, _bit_operations_1.get_bit_operation_chunks)(left, right);\r\n    // eslint-disable-next-line no-cond-assign\r\n    for (let i = 0, chunk; chunk = chunks[i]; i++) {\r\n        xor = xor + (chunk.leftChunk ^ chunk.rightChunk).toString(16).toUpperCase().padStart(chunk.chunkLen, \"0\");\r\n    }\r\n    const ret = new types_1.XString();\r\n    ret.set(xor);\r\n    return ret;\r\n}\r\nexports.bitxor = bitxor;\r\n//# sourceMappingURL=bit-xor.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/bit-xor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/concat.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/concat.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.concat = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction concat(left, right) {\r\n    let val = \"\";\r\n    if (typeof left === \"string\" || typeof left === \"number\") {\r\n        val += left;\r\n    }\r\n    else if (left instanceof types_1.Character) {\r\n        val += left.get().replace(/( )*$/, \"\");\r\n    }\r\n    else {\r\n        val += left.get();\r\n    }\r\n    if (typeof right === \"string\" || typeof right === \"number\") {\r\n        val += right;\r\n    }\r\n    else if (right instanceof types_1.Character) {\r\n        val += right.get().replace(/( )*$/, \"\");\r\n    }\r\n    else {\r\n        val += right.get();\r\n    }\r\n    return new types_1.String().set(val);\r\n}\r\nexports.concat = concat;\r\n//# sourceMappingURL=concat.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/concat.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/div.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/div.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.div = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nfunction div(left, right) {\r\n    const l = (0, _parse_1.parse)(left);\r\n    const r = (0, _parse_1.parse)(right);\r\n    const ret = new types_1.Integer().set(Math.floor(l / r));\r\n    return ret;\r\n}\r\nexports.div = div;\r\n//# sourceMappingURL=div.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/div.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/divide.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/divide.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.divide = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\n// todo, this will only work when the target value is an integer?\r\nfunction divide(left, right) {\r\n    const val = (0, _parse_1.parse)(left) / (0, _parse_1.parse)(right);\r\n    return new types_1.Float().set(val);\r\n}\r\nexports.divide = divide;\r\n//# sourceMappingURL=divide.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/divide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./add */ \"./node_modules/@abaplint/runtime/build/src/operators/add.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./div */ \"./node_modules/@abaplint/runtime/build/src/operators/div.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./divide */ \"./node_modules/@abaplint/runtime/build/src/operators/divide.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./minus */ \"./node_modules/@abaplint/runtime/build/src/operators/minus.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./mod */ \"./node_modules/@abaplint/runtime/build/src/operators/mod.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./multiply */ \"./node_modules/@abaplint/runtime/build/src/operators/multiply.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./power */ \"./node_modules/@abaplint/runtime/build/src/operators/power.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bit-and */ \"./node_modules/@abaplint/runtime/build/src/operators/bit-and.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bit-not */ \"./node_modules/@abaplint/runtime/build/src/operators/bit-not.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bit-or */ \"./node_modules/@abaplint/runtime/build/src/operators/bit-or.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bit-xor */ \"./node_modules/@abaplint/runtime/build/src/operators/bit-xor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./concat */ \"./node_modules/@abaplint/runtime/build/src/operators/concat.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/minus.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/minus.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.minus = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction minus(left, right) {\r\n    if (left instanceof types_1.Integer && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() - right.get());\r\n    }\r\n    else if (typeof left === \"number\" && typeof right === \"number\"\r\n        && Number.isInteger(left) && Number.isInteger(right)) {\r\n        return new types_1.Integer().set(left - right);\r\n    }\r\n    else if (typeof left === \"number\" && Number.isInteger(left) && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left - right.get());\r\n    }\r\n    else if (typeof right === \"number\" && Number.isInteger(right) && left instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() - right);\r\n    }\r\n    else if (left instanceof string_1.String && Number.isInteger(Number(left.get())) && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(Number.parseInt(left.get(), 10) - right.get());\r\n    }\r\n    else if (right instanceof string_1.String && Number.isInteger(Number(right)) && left instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() - Number.parseInt(right.get(), 10));\r\n    }\r\n    return new types_1.Float().set((0, _parse_1.parse)(left) - (0, _parse_1.parse)(right));\r\n}\r\nexports.minus = minus;\r\n//# sourceMappingURL=minus.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/minus.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/mod.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/mod.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.mod = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nfunction mod(left, right) {\r\n    const l = (0, _parse_1.parse)(left);\r\n    const r = (0, _parse_1.parse)(right);\r\n    const ret = new types_1.Integer().set(((l % r) + r) % r);\r\n    return ret;\r\n}\r\nexports.mod = mod;\r\n//# sourceMappingURL=mod.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/mod.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/multiply.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/multiply.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.multiply = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nconst string_1 = __webpack_require__(/*! ../types/string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nfunction multiply(left, right) {\r\n    if (left instanceof types_1.Integer && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() * right.get());\r\n    }\r\n    else if (typeof left === \"number\" && typeof right === \"number\"\r\n        && Number.isInteger(left) && Number.isInteger(right)) {\r\n        return new types_1.Integer().set(left * right);\r\n    }\r\n    else if (typeof left === \"number\" && Number.isInteger(left) && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left * right.get());\r\n    }\r\n    else if (typeof right === \"number\" && Number.isInteger(right) && left instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() * right);\r\n    }\r\n    else if (left instanceof string_1.String && Number.isInteger(Number(left.get())) && right instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(Number.parseInt(left.get(), 10) * right.get());\r\n    }\r\n    else if (right instanceof string_1.String && Number.isInteger(Number(right)) && left instanceof types_1.Integer) {\r\n        return new types_1.Integer().set(left.get() * Number.parseInt(right.get(), 10));\r\n    }\r\n    return new types_1.Float().set((0, _parse_1.parse)(left) * (0, _parse_1.parse)(right));\r\n}\r\nexports.multiply = multiply;\r\n//# sourceMappingURL=multiply.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/multiply.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/operators/power.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/operators/power.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.power = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ./_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nfunction power(left, right) {\r\n    return new types_1.Float().set(Math.pow((0, _parse_1.parse)(left), (0, _parse_1.parse)(right)));\r\n}\r\nexports.power = power;\r\n//# sourceMappingURL=power.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/operators/power.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/rfc.js":
/*!*********************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/rfc.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n//# sourceMappingURL=rfc.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/rfc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/append.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/append.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.append = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction append(input) {\r\n    if (input.target instanceof types_1.FieldSymbol) {\r\n        input.target = input.target.getPointer();\r\n    }\r\n    if (input.target === undefined) {\r\n        throw \"Field symbol not assigned\";\r\n    }\r\n    if (input.source instanceof types_1.FieldSymbol) {\r\n        input.source = input.source.getPointer();\r\n    }\r\n    if (input.lines === true && input.source instanceof types_1.Table) {\r\n        let from = 1;\r\n        if (input.from) {\r\n            from = parseInt(input.from.get() + \"\", 10);\r\n        }\r\n        let to = input.source.array().length;\r\n        if (input.to) {\r\n            to = parseInt(input.to.get() + \"\", 10);\r\n        }\r\n        let index = 1;\r\n        for (const a of input.source.array()) {\r\n            if (index < from || index > to) {\r\n                index++;\r\n                continue;\r\n            }\r\n            input.target.append(a);\r\n            index++;\r\n        }\r\n    }\r\n    else {\r\n        const val = input.target.append(input.source);\r\n        if (input.assigning) {\r\n            if (val instanceof types_1.FieldSymbol) {\r\n                input.assigning.assign(val.getPointer());\r\n            }\r\n            else {\r\n                input.assigning.assign(val);\r\n            }\r\n        }\r\n    }\r\n    // @ts-ignore\r\n    abap.builtin.sy.get().tabix.set(input.target.array().length);\r\n}\r\nexports.append = append;\r\n//# sourceMappingURL=append.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/append.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/assert.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/assert.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.assert = void 0;\r\nfunction assert(input) {\r\n    if (input === false) {\r\n        throw new Error(\"ASSERT failed\");\r\n    }\r\n}\r\nexports.assert = assert;\r\n//# sourceMappingURL=assert.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/assert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/assign.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/assign.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.assign = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction assign(input) {\r\n    if (input.dynamicText) {\r\n        if (input.dynamicSource instanceof types_1.FieldSymbol) {\r\n            input.dynamicSource = input.dynamicSource.getPointer();\r\n        }\r\n        if (input.dynamicText.includes(\"->\")) {\r\n            if (input.dynamicSource instanceof types_1.ABAPObject) {\r\n                const split = input.dynamicText.split(\"->\");\r\n                // @ts-ignore\r\n                input.dynamicSource = input.dynamicSource.get()[split[1].toLowerCase()];\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                abap.builtin.sy.get().subrc.set(4);\r\n                return;\r\n            }\r\n        }\r\n        if (input.dynamicSource) {\r\n            input.target.assign(input.dynamicSource);\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(0);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(4);\r\n        }\r\n    }\r\n    else if (input.component) {\r\n        if (input.source instanceof types_1.FieldSymbol || input.source instanceof types_1.DataReference) {\r\n            input.source = input.source.getPointer();\r\n            assign(input);\r\n            return;\r\n        }\r\n        else if (!(input.source instanceof types_1.Structure)) {\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(4);\r\n            return;\r\n        }\r\n        let component = input.component;\r\n        if (typeof component !== \"string\") {\r\n            component = component.get();\r\n        }\r\n        let result = undefined;\r\n        if (typeof component === \"number\") {\r\n            const structure_as_object = input.source.get();\r\n            const keys = Object.keys(structure_as_object);\r\n            const component_name = keys[(component - 1)];\r\n            result = structure_as_object[component_name];\r\n        }\r\n        else {\r\n            result = input.source.get()[component.toLowerCase()];\r\n        }\r\n        if (result === undefined) {\r\n            // not a field in the structure\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(4);\r\n        }\r\n        else {\r\n            input.target.assign(result);\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(0);\r\n        }\r\n    }\r\n    else {\r\n        if (input.source instanceof types_1.FieldSymbol) {\r\n            input.target.assign(input.source.getPointer());\r\n        }\r\n        else {\r\n            if (input.casting) {\r\n                input.target.setCasting();\r\n            }\r\n            input.target.assign(input.source);\r\n        }\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(0);\r\n    }\r\n}\r\nexports.assign = assign;\r\n//# sourceMappingURL=assign.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/assign.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/call_function.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/call_function.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallFunction = void 0;\r\nclass CallFunction {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    // note: this is only called if DESTINIATION is supplied\r\n    async callFunction(options) {\r\n        const dest = this.context.RFCDestinations[options.destination];\r\n        if (dest === undefined) {\r\n            throw new Error(`RFC destination ${options.destination} does not exist`);\r\n        }\r\n        await dest.call(options.name, {\r\n            exporting: options.exporting,\r\n            importing: options.importing,\r\n            tables: options.tables,\r\n            changing: options.changing,\r\n            exceptions: options.exceptions,\r\n        });\r\n    }\r\n}\r\nexports.CallFunction = CallFunction;\r\n//# sourceMappingURL=call_function.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/call_function.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/cast.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/cast.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.cast = void 0;\r\nconst compare_1 = __webpack_require__(/*! ../compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\n// todo, field symbols as input?\r\n// todo, local classes?\r\nasync function cast(target, source) {\r\n    if ((0, compare_1.initial)(source)) {\r\n        target.clear();\r\n        return;\r\n    }\r\n    /*\r\n    const targetName = target.getQualifiedName()?.toUpperCase();\r\n    if (targetName?.startsWith(\"IF_\") === false\r\n        && targetName?.startsWith(\"ZIF_\") === false) { // todo, interfaces are also classes but not inherited\r\n      // using \"instanceof\" is probably wrong in some cases,\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof\r\n      // @ts-ignore\r\n      if (abap.Classes[targetName] && source instanceof abap.Classes[targetName] === false) {\r\n        // @ts-ignore\r\n        if (abap.Classes[\"CX_SY_MOVE_CAST_ERROR\"] !== undefined) {\r\n          // @ts-ignore\r\n          throw new abap.Classes[\"CX_SY_MOVE_CAST_ERROR\"]();\r\n        } else {\r\n          throw \"Global class CX_SY_MOVE_CAST_ERROR not found\";\r\n        }\r\n      }\r\n    }\r\n    */\r\n    // throw cx_sy_move_cast_error if incompatible\r\n    // check with javascript instanceof?\r\n    // handling interfaces?\r\n    target.set(source);\r\n}\r\nexports.cast = cast;\r\n//# sourceMappingURL=cast.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/cast.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/clear.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/clear.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.clear = void 0;\r\nfunction clear(value) {\r\n    value.clear();\r\n}\r\nexports.clear = clear;\r\n//# sourceMappingURL=clear.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/clear.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/commit.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/commit.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.commit = void 0;\r\nfunction commit() {\r\n    // todo\r\n}\r\nexports.commit = commit;\r\n//# sourceMappingURL=commit.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/commit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/concatenate.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/concatenate.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.concatenate = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction concatenate(input) {\r\n    const list = [];\r\n    if (input.lines === true) {\r\n        const tab = input.source[0];\r\n        if (tab instanceof types_1.Table) {\r\n            for (const l of tab.array()) {\r\n                list.push(l.get());\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const source of input.source) {\r\n            if (typeof source === \"string\" || typeof source === \"number\") {\r\n                list.push(source.toString());\r\n            }\r\n            else if (source instanceof types_1.Table) {\r\n                throw new Error(\"concatenate, error input is table\");\r\n            }\r\n            else {\r\n                list.push(source.get().toString());\r\n            }\r\n        }\r\n    }\r\n    let sep = \"\";\r\n    if (input.separatedBy) {\r\n        if (typeof input.separatedBy === \"string\" || typeof input.separatedBy === \"number\") {\r\n            sep = input.separatedBy.toString();\r\n        }\r\n        else {\r\n            sep = input.separatedBy.get().toString();\r\n        }\r\n    }\r\n    input.target.set(list.join(sep));\r\n}\r\nexports.concatenate = concatenate;\r\n//# sourceMappingURL=concatenate.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/concatenate.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/condense.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/condense.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.condense = void 0;\r\nfunction condense(input, options) {\r\n    let trimmed = input.get().replace(/ +$/, \"\");\r\n    trimmed = trimmed.replace(/^ +/, \"\");\r\n    if (options.nogaps) {\r\n        trimmed = trimmed.replace(/ */g, \"\");\r\n    }\r\n    else {\r\n        trimmed = trimmed.replace(/ {2,}/g, \" \");\r\n    }\r\n    input.set(trimmed);\r\n}\r\nexports.condense = condense;\r\n//# sourceMappingURL=condense.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/condense.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/convert.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/convert.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.convert = void 0;\r\nconst template_formatting_1 = __webpack_require__(/*! ../template_formatting */ \"./node_modules/@abaplint/runtime/build/src/template_formatting.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction convert(source, target) {\r\n    let str = \"\";\r\n    if (source.date) {\r\n        if (typeof source.date === \"string\") {\r\n            str += source.date;\r\n        }\r\n        else {\r\n            str += source.date.get();\r\n        }\r\n    }\r\n    if (source.time) {\r\n        if (typeof source.time === \"string\") {\r\n            str += source.time;\r\n        }\r\n        else {\r\n            str += source.time.get();\r\n        }\r\n    }\r\n    if (source.stamp) {\r\n        if (typeof source.stamp === \"string\") {\r\n            str += source.stamp;\r\n        }\r\n        else {\r\n            str += source.stamp.get();\r\n        }\r\n    }\r\n    str = (0, template_formatting_1.templateFormatting)(new types_1.Character({ length: 14 }).set(str), { timestamp: \"iso\" });\r\n    str += \"Z\";\r\n    const t1 = new Date(Date.parse(str));\r\n    const out = t1.toISOString().slice(0, 19).replace(/-/g, \"\").replace(/:/g, \"\").replace(\"T\", \"\");\r\n    if (target.stamp) {\r\n        target.stamp.set(out);\r\n    }\r\n    if (target.date) {\r\n        target.date.set(out.substr(0, 8)); // + out.substr(2,2) + out.substr(0,2));\r\n    }\r\n    if (target.time) {\r\n        target.time.set(out.substring(8));\r\n    }\r\n}\r\nexports.convert = convert;\r\n//# sourceMappingURL=convert.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/convert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/create_data.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/create_data.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createData = void 0;\r\nconst clone_1 = __webpack_require__(/*! ../clone */ \"./node_modules/@abaplint/runtime/build/src/clone.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction createData(target, options) {\r\n    //  console.dir(options);\r\n    if ((options === null || options === void 0 ? void 0 : options.name) && (options === null || options === void 0 ? void 0 : options.table)) {\r\n        // @ts-ignore\r\n        if (abap.DDIC[options.name] === undefined) {\r\n            // todo, throw exception CX_SY_CREATE_DATA_ERROR\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        target.assign(new abap.types.Table(abap.DDIC[options.name].type));\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.typeHandle) {\r\n        switch (options.typeHandle.get().type_kind.get()) {\r\n            case \"F\":\r\n                target.assign(new types_1.Float());\r\n                break;\r\n            case \"I\":\r\n                target.assign(new types_1.Integer());\r\n                break;\r\n            case \"D\":\r\n                target.assign(new types_1.Date());\r\n                break;\r\n            case \"T\":\r\n                target.assign(new types_1.Time());\r\n                break;\r\n            default:\r\n                throw \"CREATE DATA, unknown handle type\";\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.name) {\r\n        // @ts-ignore\r\n        if (abap.DDIC[options.name] === undefined) {\r\n            // @ts-ignore\r\n            if (abap.Classes[\"CX_SY_CREATE_DATA_ERROR\"] !== undefined) {\r\n                // @ts-ignore\r\n                throw new abap.Classes[\"CX_SY_CREATE_DATA_ERROR\"]();\r\n            }\r\n            else {\r\n                throw \"Global class CX_SY_CREATE_DATA_ERROR not found\";\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        target.assign((0, clone_1.clone)(abap.DDIC[options.name].type));\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.type) {\r\n        target.assign((0, clone_1.clone)(options.type));\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.likeLineOf) {\r\n        if (options.likeLineOf instanceof types_1.FieldSymbol) {\r\n            options.likeLineOf = options.likeLineOf.getPointer();\r\n        }\r\n        target.assign((0, clone_1.clone)(options.likeLineOf.getRowType()));\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.like) {\r\n        if (options.like instanceof types_1.FieldSymbol) {\r\n            options.like = options.like.getPointer();\r\n        }\r\n        target.assign((0, clone_1.clone)(options.like));\r\n    }\r\n    else {\r\n        target.assign((0, clone_1.clone)(target.getType()));\r\n    }\r\n}\r\nexports.createData = createData;\r\n//# sourceMappingURL=create_data.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/create_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/delete_database.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/delete_database.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteDatabase = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nclass DeleteDatabase {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    async deleteDatabase(table, options) {\r\n        if (options.table instanceof types_1.FieldSymbol) {\r\n            options.table = options.table.getPointer();\r\n        }\r\n        if (options.from instanceof types_1.FieldSymbol) {\r\n            options.from = options.from.getPointer();\r\n        }\r\n        if (typeof table !== \"string\") {\r\n            table = table.get();\r\n        }\r\n        if (options.table) {\r\n            for (const row of options.table.array()) {\r\n                this.deleteDatabase(table, { from: row });\r\n            }\r\n        }\r\n        else if (options.from) {\r\n            let where = [];\r\n            const structure = options.from.get();\r\n            for (const k of Object.keys(structure)) {\r\n                // todo, integers should not be surrounded by '\"'?\r\n                const str = k + ' = \"' + structure[k].get() + '\"';\r\n                where.push(str);\r\n            }\r\n            where = where.join(\" AND \");\r\n            const { subrc, dbcnt } = await this.context.defaultDB().delete({ table, where });\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(subrc);\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().dbcnt.set(dbcnt);\r\n        }\r\n        else {\r\n            throw \"deleteDatabase todo\";\r\n        }\r\n    }\r\n}\r\nexports.DeleteDatabase = DeleteDatabase;\r\n//# sourceMappingURL=delete_database.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/delete_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/delete_internal.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/delete_internal.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.deleteInternal = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst compare_1 = __webpack_require__(/*! ../compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nconst loop_1 = __webpack_require__(/*! ./loop */ \"./node_modules/@abaplint/runtime/build/src/statements/loop.js\");\r\nfunction deleteInternal(target, options) {\r\n    let prev = undefined;\r\n    let index = 0;\r\n    if ((options === null || options === void 0 ? void 0 : options.index)\r\n        && (options === null || options === void 0 ? void 0 : options.where) === undefined\r\n        && (options === null || options === void 0 ? void 0 : options.adjacent) === undefined\r\n        && (options === null || options === void 0 ? void 0 : options.fromValue) === undefined\r\n        && (options === null || options === void 0 ? void 0 : options.from) === undefined\r\n        && (options === null || options === void 0 ? void 0 : options.to) === undefined) {\r\n        target.deleteIndex(options.index.get() - 1);\r\n        return;\r\n    }\r\n    for (const i of (0, loop_1.loop)(target)) {\r\n        // @ts-ignore\r\n        index = abap.builtin.sy.get().tabix.get() - 1;\r\n        if (options === null || options === void 0 ? void 0 : options.where) {\r\n            const row = i instanceof types_1.Structure ? i.get() : { table_line: i };\r\n            if (options.where(row) === true) {\r\n                target.deleteIndex(index);\r\n            }\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.adjacent) === true && prev !== undefined) {\r\n            if (options === null || options === void 0 ? void 0 : options.comparing) {\r\n                let match = false;\r\n                for (const compareField of options.comparing) {\r\n                    match = (0, compare_1.eq)(prev.get()[compareField], i.get()[compareField]);\r\n                    if (!match) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (match) {\r\n                    target.deleteIndex(index);\r\n                }\r\n            }\r\n            else if ((0, compare_1.eq)(prev, i) === true) {\r\n                target.deleteIndex(index);\r\n            }\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.index) && options.index.get() === index) {\r\n            target.deleteIndex(options.index.get() - 1);\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.fromValue) && (0, compare_1.eq)(options.fromValue, i)) {\r\n            target.deleteIndex(index);\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.from) && options.from.get() <= index + 1) {\r\n            target.deleteIndex(index);\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.to) && options.to.get() <= index + 1) {\r\n            target.deleteIndex(0);\r\n        }\r\n        prev = i;\r\n    }\r\n}\r\nexports.deleteInternal = deleteInternal;\r\n//# sourceMappingURL=delete_internal.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/delete_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/describe.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/describe.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.describe = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction describe(input) {\r\n    //  console.dir(input);\r\n    if (input.type) {\r\n        if (input.field instanceof types_1.FieldSymbol) {\r\n            describe({ field: input.field.getPointer(), type: input.type, length: input.length, mode: input.mode });\r\n            return;\r\n        }\r\n        if (input.field instanceof types_1.Table) {\r\n            input.type.set(\"h\");\r\n        }\r\n        else if (input.field instanceof types_1.Character || typeof input.field === \"string\") {\r\n            input.type.set(\"C\");\r\n        }\r\n        else if (input.field instanceof types_1.Integer) {\r\n            input.type.set(\"I\");\r\n        }\r\n        else if (input.field instanceof types_1.Date) {\r\n            input.type.set(\"D\");\r\n        }\r\n        else if (input.field instanceof types_1.Time) {\r\n            input.type.set(\"T\");\r\n        }\r\n        else if (input.field instanceof types_1.Float) {\r\n            input.type.set(\"F\");\r\n        }\r\n        else if (input.field instanceof types_1.Numc) {\r\n            input.type.set(\"N\");\r\n        }\r\n        else if (input.field instanceof types_1.Hex) {\r\n            input.type.set(\"X\");\r\n        }\r\n        else if (input.field instanceof types_1.Packed) {\r\n            input.type.set(\"P\");\r\n        }\r\n        else if (input.field instanceof types_1.String) {\r\n            input.type.set(\"g\");\r\n        }\r\n        else if (input.field instanceof types_1.XString) {\r\n            input.type.set(\"y\");\r\n        }\r\n        else if (input.field instanceof types_1.DecFloat34) {\r\n            input.type.set(\"e\");\r\n        }\r\n        else if (input.field instanceof types_1.Structure) {\r\n            input.type.set(\"u\");\r\n        }\r\n        else if (input.field instanceof types_1.ABAPObject) {\r\n            input.type.set(\"r\");\r\n        }\r\n        else if (input.field instanceof types_1.DataReference) {\r\n            input.type.set(\"l\");\r\n        }\r\n        else {\r\n            throw new Error(\"DESCRIBE, todo, transpiler, \" + input.field.constructor.name);\r\n        }\r\n    }\r\n    if (input.length) {\r\n        if (input.field instanceof types_1.FieldSymbol) {\r\n            input.field = input.field.getPointer();\r\n        }\r\n        if (input.field instanceof types_1.Character\r\n            || input.field instanceof types_1.Hex) {\r\n            input.length.set(input.field.getLength());\r\n        }\r\n        else {\r\n            throw \"DESCRIBE, unsupported or todo\";\r\n        }\r\n    }\r\n    if (input.table && input.lines) {\r\n        input.lines.set(input.table.array().length);\r\n    }\r\n}\r\nexports.describe = describe;\r\n//# sourceMappingURL=describe.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/describe.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/find.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/find.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.find = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction find(input, options) {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    let sectionOffset = (_a = options.sectionOffset) === null || _a === void 0 ? void 0 : _a.get();\r\n    if (sectionOffset && options.byteMode) {\r\n        sectionOffset = sectionOffset * 2;\r\n    }\r\n    let s = \"\";\r\n    if (options.find) {\r\n        s = options.find;\r\n        if (typeof s !== \"string\") {\r\n            s = s.get();\r\n        }\r\n        if (s === \"\") {\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(0);\r\n            return;\r\n        }\r\n        s = s.replace(/\\[/g, \"\\\\[\");\r\n        s = s.replace(/\\]/g, \"\\\\]\");\r\n        s = s.replace(/\\?/g, \"\\\\?\");\r\n        s = s.replace(/\\(/g, \"\\\\(\");\r\n        s = s.replace(/\\)/g, \"\\\\)\");\r\n        s = s.replace(/\\./g, \"\\\\.\");\r\n        s = s.replace(/\\|/g, \"\\\\|\");\r\n        s = s.replace(/\\*/g, \"\\\\*\");\r\n        s = s.replace(/\\+/g, \"\\\\+\");\r\n        s = new RegExp(s, \"g\");\r\n    }\r\n    else if (options.regex) {\r\n        if (options.regex === \"\") {\r\n            throw \"FIND, runtime, no input, regex empty\";\r\n        }\r\n        let r = options.regex;\r\n        if (typeof r !== \"string\") {\r\n            r = r.get();\r\n        }\r\n        // check type, it can also be a CL_ABAP_REGEX\r\n        if (typeof r === \"string\") {\r\n            r = r.replace(\"[[:space:]]\", \"\\\\s\");\r\n        }\r\n        s = new RegExp(r, \"g\" + (options.ignoringCase === true ? \"i\" : \"\"));\r\n    }\r\n    else {\r\n        throw \"FIND, runtime, no input\";\r\n    }\r\n    const matches = [];\r\n    if (input instanceof types_1.Table) {\r\n        let line = 1;\r\n        for (const blah of input.array()) {\r\n            let temp;\r\n            // eslint-disable-next-line no-cond-assign\r\n            while (temp = s.exec(blah.get())) {\r\n                matches.push(Object.assign(Object.assign({}, temp), { line }));\r\n                if (options.first === true) {\r\n                    break;\r\n                }\r\n            }\r\n            line++;\r\n        }\r\n    }\r\n    else {\r\n        let blah = input.get();\r\n        if (sectionOffset) {\r\n            blah = blah.substr(sectionOffset);\r\n        }\r\n        let temp;\r\n        // eslint-disable-next-line no-cond-assign\r\n        while (temp = s.exec(blah)) {\r\n            matches.push(temp);\r\n            if (options.first === true) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (options.submatches) {\r\n        for (let index = 0; index < options.submatches.length; index++) {\r\n            if (matches[0] && matches[0][index + 1]) {\r\n                options.submatches[index].set(matches[0][index + 1]);\r\n            }\r\n            else if (matches.length > 0) {\r\n                options.submatches[index].clear();\r\n            }\r\n        }\r\n    }\r\n    if (options.results) {\r\n        // assumption, results is a table with the correct type\r\n        options.results.clear();\r\n        for (const m of matches) {\r\n            const match = new types_1.Structure({\r\n                line: new types_1.Integer(),\r\n                offset: new types_1.Integer(),\r\n                length: new types_1.Integer(),\r\n                submatches: new types_1.Table(new types_1.Structure({ offset: new types_1.Integer(), length: new types_1.Integer() })),\r\n            });\r\n            match.get().line.set(m.line || 0);\r\n            match.get().offset.set(m.index);\r\n            match.get().length.set(m[0].length);\r\n            const submatch = new types_1.Structure({ offset: new types_1.Integer(), length: new types_1.Integer() });\r\n            for (let i = 1; i < m.length; i++) {\r\n                if (m[i] === undefined) {\r\n                    submatch.get().offset.set(-1);\r\n                    submatch.get().length.set(0);\r\n                }\r\n                else {\r\n                    submatch.get().offset.set(m.index + m[0].indexOf(m[i]));\r\n                    submatch.get().length.set(m[i].length);\r\n                }\r\n                match.get().submatches.append(submatch);\r\n            }\r\n            if (options.results instanceof types_1.Table) {\r\n                options.results.append(match);\r\n            }\r\n            else {\r\n                options.results.set(match);\r\n            }\r\n            if (options.first === undefined || options.first === true) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (matches.length === 0) {\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(4);\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(0);\r\n    }\r\n    if (((_b = matches[0]) === null || _b === void 0 ? void 0 : _b.index) !== undefined) {\r\n        let val = matches[0].index;\r\n        if (sectionOffset) {\r\n            val += sectionOffset;\r\n        }\r\n        if (options.byteMode) {\r\n            val = val / 2;\r\n        }\r\n        (_c = options.offset) === null || _c === void 0 ? void 0 : _c.set(val);\r\n    }\r\n    if (options === null || options === void 0 ? void 0 : options.count) {\r\n        (_d = options.count) === null || _d === void 0 ? void 0 : _d.set(matches.length);\r\n    }\r\n    else {\r\n        (_e = options.count) === null || _e === void 0 ? void 0 : _e.clear();\r\n    }\r\n    if ((options === null || options === void 0 ? void 0 : options.length) && matches && matches[0]) {\r\n        (_f = options.length) === null || _f === void 0 ? void 0 : _f.set(matches[0][0].length);\r\n    }\r\n    else {\r\n        (_g = options.length) === null || _g === void 0 ? void 0 : _g.clear();\r\n    }\r\n}\r\nexports.find = find;\r\n//# sourceMappingURL=find.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/find.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/get_bit.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/get_bit.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getBit = void 0;\r\nfunction getBit(number, hex, output) {\r\n    const charIndex = Math.floor((number.get() - 1) / 8);\r\n    const bitIndex = (number.get() - 1) % 8;\r\n    const h = hex.get().substr(charIndex * 2, 2);\r\n    const parsed = parseInt(h, 16).toString(2);\r\n    const bits = parsed.padStart(8, \"0\");\r\n    output.set(bits.substr(bitIndex, 1));\r\n}\r\nexports.getBit = getBit;\r\n//# sourceMappingURL=get_bit.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/get_bit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/get_locale.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/get_locale.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getLocale = void 0;\r\nfunction getLocale(target) {\r\n    // todo\r\n    target.set(\"E\");\r\n}\r\nexports.getLocale = getLocale;\r\n//# sourceMappingURL=get_locale.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/get_locale.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/get_run_time.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/get_run_time.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getRunTime = void 0;\r\nlet prev = undefined;\r\nfunction getRunTime(value) {\r\n    if (prev === undefined) {\r\n        value.set(0);\r\n        prev = new Date().getTime();\r\n    }\r\n    else {\r\n        const now = new Date().getTime();\r\n        value.set(now - prev);\r\n        prev = now;\r\n    }\r\n}\r\nexports.getRunTime = getRunTime;\r\n//# sourceMappingURL=get_run_time.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/get_run_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/get_time.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/get_time.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getTime = void 0;\r\nfunction getTime(options) {\r\n    const d = new Date();\r\n    const date = d.getUTCFullYear() +\r\n        (d.getUTCMonth() + 1 + \"\").padStart(2, \"0\") +\r\n        (d.getUTCDate() + \"\").padStart(2, \"0\");\r\n    const time = (d.getUTCHours() + \"\").padStart(2, \"0\") +\r\n        (d.getUTCMinutes() + \"\").padStart(2, \"0\") +\r\n        (d.getUTCSeconds() + \"\").padStart(2, \"0\");\r\n    if (options === undefined) {\r\n        options = {};\r\n    }\r\n    if ((options === null || options === void 0 ? void 0 : options.sy) === undefined) {\r\n        // @ts-ignore\r\n        options.sy = abap.builtin.sy;\r\n    }\r\n    options.sy.get().datlo.set(date);\r\n    options.sy.get().datum.set(date);\r\n    options.sy.get().timlo.set(time);\r\n    options.sy.get().uzeit.set(time);\r\n    if (options === null || options === void 0 ? void 0 : options.field) {\r\n        options.field.set(time);\r\n    }\r\n    if (options === null || options === void 0 ? void 0 : options.stamp) {\r\n        options.stamp.set(date + time);\r\n    }\r\n}\r\nexports.getTime = getTime;\r\n//# sourceMappingURL=get_time.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/get_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Statements = void 0;\r\nconst append_1 = __webpack_require__(/*! ./append */ \"./node_modules/@abaplint/runtime/build/src/statements/append.js\");\r\nconst assert_1 = __webpack_require__(/*! ./assert */ \"./node_modules/@abaplint/runtime/build/src/statements/assert.js\");\r\nconst assign_1 = __webpack_require__(/*! ./assign */ \"./node_modules/@abaplint/runtime/build/src/statements/assign.js\");\r\nconst clear_1 = __webpack_require__(/*! ./clear */ \"./node_modules/@abaplint/runtime/build/src/statements/clear.js\");\r\nconst commit_1 = __webpack_require__(/*! ./commit */ \"./node_modules/@abaplint/runtime/build/src/statements/commit.js\");\r\nconst concatenate_1 = __webpack_require__(/*! ./concatenate */ \"./node_modules/@abaplint/runtime/build/src/statements/concatenate.js\");\r\nconst condense_1 = __webpack_require__(/*! ./condense */ \"./node_modules/@abaplint/runtime/build/src/statements/condense.js\");\r\nconst convert_1 = __webpack_require__(/*! ./convert */ \"./node_modules/@abaplint/runtime/build/src/statements/convert.js\");\r\nconst create_data_1 = __webpack_require__(/*! ./create_data */ \"./node_modules/@abaplint/runtime/build/src/statements/create_data.js\");\r\nconst delete_internal_1 = __webpack_require__(/*! ./delete_internal */ \"./node_modules/@abaplint/runtime/build/src/statements/delete_internal.js\");\r\nconst describe_1 = __webpack_require__(/*! ./describe */ \"./node_modules/@abaplint/runtime/build/src/statements/describe.js\");\r\nconst find_1 = __webpack_require__(/*! ./find */ \"./node_modules/@abaplint/runtime/build/src/statements/find.js\");\r\nconst cast_1 = __webpack_require__(/*! ./cast */ \"./node_modules/@abaplint/runtime/build/src/statements/cast.js\");\r\nconst get_bit_1 = __webpack_require__(/*! ./get_bit */ \"./node_modules/@abaplint/runtime/build/src/statements/get_bit.js\");\r\nconst get_locale_1 = __webpack_require__(/*! ./get_locale */ \"./node_modules/@abaplint/runtime/build/src/statements/get_locale.js\");\r\nconst set_locale_1 = __webpack_require__(/*! ./set_locale */ \"./node_modules/@abaplint/runtime/build/src/statements/set_locale.js\");\r\nconst get_run_time_1 = __webpack_require__(/*! ./get_run_time */ \"./node_modules/@abaplint/runtime/build/src/statements/get_run_time.js\");\r\nconst get_time_1 = __webpack_require__(/*! ./get_time */ \"./node_modules/@abaplint/runtime/build/src/statements/get_time.js\");\r\nconst insert_database_1 = __webpack_require__(/*! ./insert_database */ \"./node_modules/@abaplint/runtime/build/src/statements/insert_database.js\");\r\nconst insert_internal_1 = __webpack_require__(/*! ./insert_internal */ \"./node_modules/@abaplint/runtime/build/src/statements/insert_internal.js\");\r\nconst delete_database_1 = __webpack_require__(/*! ./delete_database */ \"./node_modules/@abaplint/runtime/build/src/statements/delete_database.js\");\r\nconst loop_1 = __webpack_require__(/*! ./loop */ \"./node_modules/@abaplint/runtime/build/src/statements/loop.js\");\r\nconst message_1 = __webpack_require__(/*! ./message */ \"./node_modules/@abaplint/runtime/build/src/statements/message.js\");\r\nconst modify_database_1 = __webpack_require__(/*! ./modify_database */ \"./node_modules/@abaplint/runtime/build/src/statements/modify_database.js\");\r\nconst modify_internal_1 = __webpack_require__(/*! ./modify_internal */ \"./node_modules/@abaplint/runtime/build/src/statements/modify_internal.js\");\r\nconst move_corresponding_1 = __webpack_require__(/*! ./move_corresponding */ \"./node_modules/@abaplint/runtime/build/src/statements/move_corresponding.js\");\r\nconst read_table_1 = __webpack_require__(/*! ./read_table */ \"./node_modules/@abaplint/runtime/build/src/statements/read_table.js\");\r\nconst replace_1 = __webpack_require__(/*! ./replace */ \"./node_modules/@abaplint/runtime/build/src/statements/replace.js\");\r\nconst rollback_1 = __webpack_require__(/*! ./rollback */ \"./node_modules/@abaplint/runtime/build/src/statements/rollback.js\");\r\nconst select_1 = __webpack_require__(/*! ./select */ \"./node_modules/@abaplint/runtime/build/src/statements/select.js\");\r\nconst set_bit_1 = __webpack_require__(/*! ./set_bit */ \"./node_modules/@abaplint/runtime/build/src/statements/set_bit.js\");\r\nconst shift_1 = __webpack_require__(/*! ./shift */ \"./node_modules/@abaplint/runtime/build/src/statements/shift.js\");\r\nconst sort_1 = __webpack_require__(/*! ./sort */ \"./node_modules/@abaplint/runtime/build/src/statements/sort.js\");\r\nconst split_1 = __webpack_require__(/*! ./split */ \"./node_modules/@abaplint/runtime/build/src/statements/split.js\");\r\nconst translate_1 = __webpack_require__(/*! ./translate */ \"./node_modules/@abaplint/runtime/build/src/statements/translate.js\");\r\nconst update_database_1 = __webpack_require__(/*! ./update_database */ \"./node_modules/@abaplint/runtime/build/src/statements/update_database.js\");\r\nconst write_1 = __webpack_require__(/*! ./write */ \"./node_modules/@abaplint/runtime/build/src/statements/write.js\");\r\nconst call_function_1 = __webpack_require__(/*! ./call_function */ \"./node_modules/@abaplint/runtime/build/src/statements/call_function.js\");\r\n// this is a class, as statements like SELECT needs access to the database object instance\r\n// and WRITE will access the Console\r\nclass Statements {\r\n    constructor(context) {\r\n        this.append = append_1.append;\r\n        this.assert = assert_1.assert;\r\n        this.assign = assign_1.assign;\r\n        this.cast = cast_1.cast;\r\n        this.clear = clear_1.clear;\r\n        this.commit = commit_1.commit;\r\n        this.concatenate = concatenate_1.concatenate;\r\n        this.condense = condense_1.condense;\r\n        this.convert = convert_1.convert;\r\n        this.createData = create_data_1.createData;\r\n        this.deleteInternal = delete_internal_1.deleteInternal;\r\n        this.describe = describe_1.describe;\r\n        this.find = find_1.find;\r\n        this.getBit = get_bit_1.getBit;\r\n        this.getLocale = get_locale_1.getLocale;\r\n        this.getRunTime = get_run_time_1.getRunTime;\r\n        this.getTime = get_time_1.getTime;\r\n        this.insertInternal = insert_internal_1.insertInternal;\r\n        this.loop = loop_1.loop;\r\n        this.modifyInternal = modify_internal_1.modifyInternal;\r\n        this.moveCorresponding = move_corresponding_1.moveCorresponding;\r\n        this.readTable = read_table_1.readTable;\r\n        this.replace = replace_1.replace;\r\n        this.rollback = rollback_1.rollback;\r\n        this.setBit = set_bit_1.setBit;\r\n        this.setLocale = set_locale_1.setLocale;\r\n        this.shift = shift_1.shift;\r\n        this.sort = sort_1.sort;\r\n        this.split = split_1.split;\r\n        this.translate = translate_1.translate;\r\n        this.context = context;\r\n    }\r\n    async deleteDatabase(table, options) {\r\n        return new delete_database_1.DeleteDatabase(this.context).deleteDatabase(table, options);\r\n    }\r\n    async insertDatabase(table, options) {\r\n        return new insert_database_1.InsertDatabase(this.context).insertDatabase(table, options);\r\n    }\r\n    async message(options) {\r\n        return new message_1.MessageStatement(this.context).message(options);\r\n    }\r\n    async modifyDatabase(table, options) {\r\n        return new modify_database_1.ModifyDatabase(this.context).modifyDatabase(table, options);\r\n    }\r\n    async select(target, select) {\r\n        return new select_1.SelectDatabase(this.context).select(target, select);\r\n    }\r\n    async updateDatabase(table, options) {\r\n        return new update_database_1.UpdateDatabase(this.context).updateDatabase(table, options);\r\n    }\r\n    async callFunction(options) {\r\n        return new call_function_1.CallFunction(this.context).callFunction(options);\r\n    }\r\n    write(source, options) {\r\n        return new write_1.WriteStatement(this.context).write(source, options);\r\n    }\r\n}\r\nexports.Statements = Statements;\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/insert_database.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/insert_database.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertDatabase = void 0;\r\nclass InsertDatabase {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    async insertDatabase(table, options) {\r\n        const columns = [];\r\n        const values = [];\r\n        const structure = options.values.get();\r\n        for (const k of Object.keys(structure)) {\r\n            columns.push(k);\r\n            // todo, integers should not be surrounded by '\"'?\r\n            values.push('\"' + structure[k].get() + '\"');\r\n        }\r\n        if (typeof table !== \"string\") {\r\n            table = table.get();\r\n        }\r\n        const { subrc, dbcnt } = await this.context.defaultDB().insert({ table, columns, values });\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(subrc);\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().dbcnt.set(dbcnt);\r\n        return subrc;\r\n    }\r\n}\r\nexports.InsertDatabase = InsertDatabase;\r\n//# sourceMappingURL=insert_database.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/insert_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/insert_internal.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/insert_internal.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.insertInternal = void 0;\r\nconst clone_1 = __webpack_require__(/*! ../clone */ \"./node_modules/@abaplint/runtime/build/src/clone.js\");\r\nconst compare_1 = __webpack_require__(/*! ../compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst read_table_1 = __webpack_require__(/*! ./read_table */ \"./node_modules/@abaplint/runtime/build/src/statements/read_table.js\");\r\nconst sort_1 = __webpack_require__(/*! ./sort */ \"./node_modules/@abaplint/runtime/build/src/statements/sort.js\");\r\nfunction insertInternal(options) {\r\n    var _a;\r\n    if (options.table instanceof types_1.FieldSymbol) {\r\n        options.table = options.table.getPointer();\r\n    }\r\n    const tableOptions = options.table.getOptions();\r\n    const isSorted = (tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.type) === types_1.TableAccessType.sorted || (tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.type) === types_1.TableAccessType.hashed;\r\n    if (isSorted) {\r\n        const insert = options.data instanceof types_1.Structure ? options.data.get() : { table_line: options.data };\r\n        const compare = (row) => {\r\n            for (const key of (tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.keyFields) || []) {\r\n                if ((0, compare_1.ne)(row[key.toLowerCase()], insert[key.toLowerCase()])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        if (tableOptions.isUnique === true) {\r\n            (0, read_table_1.readTable)(options.table, { withKey: compare });\r\n            // @ts-ignore\r\n            if (abap.builtin.sy.get().subrc.get() === 0) {\r\n                // @ts-ignore\r\n                abap.builtin.sy.get().subrc.set(4);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    let data = options.data;\r\n    if (typeof data === \"string\") {\r\n        const tmp = (0, clone_1.clone)(options.table.getRowType());\r\n        tmp.set(data);\r\n        data = tmp;\r\n    }\r\n    if (data && options.index) {\r\n        const index = options.index.get() - 1;\r\n        const val = options.table.insertIndex(data, index);\r\n        if (options.assigning) {\r\n            options.assigning.assign(val);\r\n        }\r\n    }\r\n    else if (options.lines && options.data instanceof types_1.Table) {\r\n        for (const i of options.data.array()) {\r\n            options.table.append(i);\r\n        }\r\n    }\r\n    else if (options.initial === true) {\r\n        let index = options.table.array().length;\r\n        if (options.index) {\r\n            index = options.index.get() - 1;\r\n        }\r\n        const val = options.table.insertIndex(options.table.getRowType(), index);\r\n        if (options.assigning) {\r\n            options.assigning.assign(val);\r\n        }\r\n    }\r\n    else if (data) {\r\n        // todo, for now it just appends, this is not correct, but currently the table type is not known\r\n        const val = options.table.insertIndex(data, options.table.array().length);\r\n        if (options.assigning) {\r\n            options.assigning.assign(val);\r\n        }\r\n        if (options.referenceInto) {\r\n            options.referenceInto.assign(val);\r\n        }\r\n    }\r\n    // @ts-ignore\r\n    abap.builtin.sy.get().subrc.set(0);\r\n    if (isSorted) {\r\n        // slow, but works for now\r\n        const by = (_a = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.keyFields) === null || _a === void 0 ? void 0 : _a.map(f => { return { component: f.toLowerCase() }; });\r\n        (0, sort_1.sort)(options.table, { by: by });\r\n    }\r\n}\r\nexports.insertInternal = insertInternal;\r\n//# sourceMappingURL=insert_internal.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/insert_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/loop.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/loop.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.loop = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction* loop(table, options) {\r\n    if (table === undefined) {\r\n        throw new Error(\"LOOP at undefined\");\r\n    }\r\n    else if (table instanceof types_1.FieldSymbol) {\r\n        // @ts-ignore\r\n        yield* loop(table.getPointer(), options);\r\n        return;\r\n    }\r\n    const length = table.array().length;\r\n    if (length === 0) {\r\n        return;\r\n    }\r\n    const loopFrom = (options === null || options === void 0 ? void 0 : options.from) && (options === null || options === void 0 ? void 0 : options.from.get()) > 0 ? options.from.get() - 1 : 0;\r\n    let loopTo = (options === null || options === void 0 ? void 0 : options.to) && options.to.get() < length ? options.to.get() : length;\r\n    const loopIndex = table.startLoop(loopFrom);\r\n    let entered = false;\r\n    try {\r\n        const array = table.array();\r\n        const isStructured = array[0] instanceof types_1.Structure;\r\n        while (loopIndex.index < loopTo) {\r\n            if (loopIndex.index > array.length) {\r\n                break;\r\n            }\r\n            const current = array[loopIndex.index];\r\n            if (options === null || options === void 0 ? void 0 : options.where) {\r\n                const row = isStructured ? current.get() : { table_line: current };\r\n                if (options.where(row) === false) {\r\n                    loopIndex.index++;\r\n                    continue;\r\n                }\r\n            }\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().tabix.set(loopIndex.index + 1);\r\n            yield current;\r\n            entered = true;\r\n            loopIndex.index++;\r\n            loopTo = (options === null || options === void 0 ? void 0 : options.to) && options.to.get() < array.length ? options.to.get() : array.length;\r\n        }\r\n    }\r\n    finally {\r\n        table.unregisterLoop(loopIndex);\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(entered ? 0 : 4);\r\n    }\r\n}\r\nexports.loop = loop;\r\n//# sourceMappingURL=loop.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/message.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/message.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageStatement = void 0;\r\nfunction replace(text, w) {\r\n    for (let i = 0; i < 6; i++) {\r\n        const search = \"&\" + (i + 1);\r\n        let replace = \"\";\r\n        if (w && w[i]) {\r\n            const j = w[i];\r\n            if (typeof j === \"string\") {\r\n                replace = j;\r\n            }\r\n            else {\r\n                replace = j.get();\r\n            }\r\n        }\r\n        const field = \"msgv\" + (i + 1);\r\n        if (i <= 3) {\r\n            // @ts-ignore\r\n            abap.builtin.sy.get()[field].set(replace);\r\n        }\r\n        text = text.replace(search, replace);\r\n    }\r\n    return text.trim();\r\n}\r\nasync function findText(context, arbgb, msgnr) {\r\n    let text = undefined;\r\n    if (arbgb && msgnr) {\r\n        try {\r\n            // todo, sql injection?\r\n            const select = `SELECT * FROM t100 WHERE sprsl='E' AND arbgb='${arbgb}' AND msgnr='${msgnr}' LIMIT 1`;\r\n            const { rows: result } = await context.defaultDB().select({ select });\r\n            if (result[0]) {\r\n                text = result[0][\"text\"];\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // use fallback text\r\n        }\r\n    }\r\n    if (text === undefined) {\r\n        // fallback\r\n        text = arbgb + \":\" + msgnr + \" &1 &2 &3 &4\";\r\n    }\r\n    return text;\r\n}\r\nclass MessageStatement {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    async message(options) {\r\n        let arbgb = options.id;\r\n        if (arbgb !== undefined && typeof arbgb !== \"string\") {\r\n            arbgb = arbgb.get();\r\n        }\r\n        arbgb = arbgb === null || arbgb === void 0 ? void 0 : arbgb.toUpperCase();\r\n        let msgty = options.type;\r\n        if (msgty !== undefined && typeof msgty !== \"string\") {\r\n            msgty = msgty.get();\r\n        }\r\n        msgty = msgty === null || msgty === void 0 ? void 0 : msgty.toUpperCase();\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().msgid.set(arbgb);\r\n        let msgnr = options.number;\r\n        if (msgnr !== undefined && typeof msgnr !== \"string\") {\r\n            msgnr = msgnr.get();\r\n        }\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().msgno.set(msgnr);\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().msgty.set(msgty);\r\n        const text = await findText(this.context, arbgb, msgnr);\r\n        const replaced = replace(text, options.with);\r\n        if (options.into) {\r\n            options.into.set(replaced);\r\n        }\r\n    }\r\n}\r\nexports.MessageStatement = MessageStatement;\r\n//# sourceMappingURL=message.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/message.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/modify_database.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/modify_database.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyDatabase = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst insert_database_1 = __webpack_require__(/*! ./insert_database */ \"./node_modules/@abaplint/runtime/build/src/statements/insert_database.js\");\r\nconst update_database_1 = __webpack_require__(/*! ./update_database */ \"./node_modules/@abaplint/runtime/build/src/statements/update_database.js\");\r\nclass ModifyDatabase {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    async modifyDatabase(table, options) {\r\n        if (options.table instanceof types_1.FieldSymbol) {\r\n            options.table = options.table.getPointer();\r\n        }\r\n        if (options.from instanceof types_1.FieldSymbol) {\r\n            options.from = options.from.getPointer();\r\n        }\r\n        const insert = new insert_database_1.InsertDatabase(this.context);\r\n        const update = new update_database_1.UpdateDatabase(this.context);\r\n        if (options.table) {\r\n            for (const row of options.table.array()) {\r\n                const subrc = await insert.insertDatabase(table, { values: row });\r\n                if (subrc !== 0) {\r\n                    await update.updateDatabase(table, { from: row });\r\n                }\r\n            }\r\n        }\r\n        else if (options.from) {\r\n            const subrc = await insert.insertDatabase(table, { values: options.from });\r\n            if (subrc !== 0) {\r\n                await update.updateDatabase(table, { from: options.from });\r\n            }\r\n        }\r\n        else {\r\n            throw \"modifyDatabase todo\";\r\n        }\r\n    }\r\n}\r\nexports.ModifyDatabase = ModifyDatabase;\r\n//# sourceMappingURL=modify_database.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/modify_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/modify_internal.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/modify_internal.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.modifyInternal = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst delete_internal_1 = __webpack_require__(/*! ./delete_internal */ \"./node_modules/@abaplint/runtime/build/src/statements/delete_internal.js\");\r\nconst insert_internal_1 = __webpack_require__(/*! ./insert_internal */ \"./node_modules/@abaplint/runtime/build/src/statements/insert_internal.js\");\r\nconst read_table_1 = __webpack_require__(/*! ./read_table */ \"./node_modules/@abaplint/runtime/build/src/statements/read_table.js\");\r\nfunction modifyInternal(table, options) {\r\n    let found = false;\r\n    if (options.index) {\r\n        const index = options.index.get() - 1;\r\n        found = table.array()[index] !== undefined;\r\n        if (found) {\r\n            table.deleteIndex(index);\r\n            table.insertIndex(options.from, index);\r\n        }\r\n    }\r\n    else if (options.from) {\r\n        const readResult = (0, read_table_1.readTable)(table, { from: options.from });\r\n        if (readResult.subrc === 0) {\r\n            (0, delete_internal_1.deleteInternal)(table, { index: new types_1.Integer().set(readResult.foundIndex) });\r\n        }\r\n        (0, insert_internal_1.insertInternal)({ table, data: options.from });\r\n    }\r\n    const subrc = found ? 0 : 4;\r\n    // @ts-ignore\r\n    abap.builtin.sy.get().subrc.set(subrc);\r\n}\r\nexports.modifyInternal = modifyInternal;\r\n//# sourceMappingURL=modify_internal.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/modify_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/move_corresponding.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/move_corresponding.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.moveCorresponding = void 0;\r\nfunction moveCorresponding(source, target) {\r\n    var _a;\r\n    for (const n in source.get()) {\r\n        (_a = target.get()[n]) === null || _a === void 0 ? void 0 : _a.set(source.get()[n]);\r\n    }\r\n}\r\nexports.moveCorresponding = moveCorresponding;\r\n//# sourceMappingURL=move_corresponding.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/move_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/read_table.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/read_table.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.readTable = void 0;\r\nconst compare_1 = __webpack_require__(/*! ../compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction readTable(table, options) {\r\n    var _a;\r\n    let found = undefined;\r\n    let foundIndex = 0;\r\n    const arr = table.array();\r\n    if (options === null || options === void 0 ? void 0 : options.index) {\r\n        let index = options.index;\r\n        if (typeof index !== \"number\") {\r\n            index = index.get();\r\n        }\r\n        found = arr[index - 1];\r\n        if (found) {\r\n            foundIndex = index;\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.withKey) {\r\n        const isStructured = arr[0] instanceof types_1.Structure;\r\n        for (const a of arr) {\r\n            foundIndex++;\r\n            const row = isStructured ? a.get() : { table_line: a };\r\n            if (options.withKey(row) === true) {\r\n                found = a;\r\n                break;\r\n            }\r\n        }\r\n        if (found === undefined) {\r\n            foundIndex = 0;\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.from) {\r\n        if (table instanceof types_1.Table && options.from instanceof types_1.Structure) {\r\n            const keys = (_a = table.getOptions()) === null || _a === void 0 ? void 0 : _a.keyFields;\r\n            const isStructured = arr[0] instanceof types_1.Structure;\r\n            if (keys !== undefined && isStructured === true) {\r\n                //        console.dir(keys);\r\n                //        console.dir(options.from.get()[keys[0].toLowerCase()]);\r\n                for (const a of arr) {\r\n                    foundIndex++;\r\n                    let matches = true;\r\n                    for (const k of keys) {\r\n                        if ((0, compare_1.eq)(a.get()[k.toLowerCase()], options.from.get()[k.toLowerCase()]) === false) {\r\n                            matches = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (matches === true) {\r\n                        found = arr;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (found === undefined) {\r\n            foundIndex = 0;\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"runtime, readTable, unexpected input\");\r\n    }\r\n    let subrc = found ? 0 : 4;\r\n    if ((options === null || options === void 0 ? void 0 : options.from) && subrc === 4) {\r\n        subrc = 8;\r\n    }\r\n    // @ts-ignore\r\n    abap.builtin.sy.get().subrc.set(subrc);\r\n    // @ts-ignore\r\n    abap.builtin.sy.get().tabix.set(foundIndex);\r\n    if (options.into && found) {\r\n        if (options.into instanceof types_1.DataReference && found instanceof types_1.DataReference) {\r\n            options.into.assign(found.getPointer());\r\n        }\r\n        else if (options.into instanceof types_1.DataReference) {\r\n            options.into.assign(found);\r\n        }\r\n        else {\r\n            options.into.set(found);\r\n        }\r\n    }\r\n    else if (options.referenceInto && found) {\r\n        options.referenceInto.assign(found);\r\n    }\r\n    else if (options.assigning && found) {\r\n        options.assigning.assign(found);\r\n    }\r\n    return { subrc, foundIndex };\r\n}\r\nexports.readTable = readTable;\r\n//# sourceMappingURL=read_table.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/read_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/replace.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/replace.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.replace = void 0;\r\nfunction replace(input) {\r\n    let temp = input.target.get();\r\n    const ignoreCase = input.ignoringCase === true ? \"i\" : \"\";\r\n    let search = \"\";\r\n    let found = false;\r\n    if (input.of) {\r\n        search = input.of.get();\r\n        if (search.length === 0 && input.all === true) {\r\n            throw \"REPLACE, zero length input\";\r\n        }\r\n        found = temp.indexOf(search) >= 0;\r\n        if (ignoreCase.length > 0) {\r\n            search = new RegExp(search, ignoreCase);\r\n        }\r\n    }\r\n    else if (input.regex) {\r\n        if (input.regex.get().length === 0 && input.all === true) {\r\n            throw \"REPLACE, zero length input\";\r\n        }\r\n        found = temp.match(search) !== null;\r\n        search = new RegExp(input.regex.get(), ignoreCase);\r\n    }\r\n    let replace = \"\";\r\n    if (typeof input.with === \"string\") {\r\n        replace = input.with;\r\n    }\r\n    else {\r\n        replace = input.with.get();\r\n        replace = replace.replace(/\\\\\\$/g, \"$\");\r\n        replace = replace.replace(/\\\\\\{/g, \"{\");\r\n        replace = replace.replace(/\\\\\\}/g, \"}\");\r\n    }\r\n    if (input.all === true) {\r\n        if (input.regex) {\r\n            temp = temp.replace(new RegExp(input.regex.get(), \"g\" + ignoreCase), replace);\r\n        }\r\n        else {\r\n            while (temp.replace(search, replace) !== temp) {\r\n                temp = temp.replace(search, replace);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        temp = temp.replace(search, replace);\r\n    }\r\n    const subrc = found ? 0 : 4;\r\n    // @ts-ignore\r\n    abap.builtin.sy.get().subrc.set(subrc);\r\n    input.target.set(temp);\r\n}\r\nexports.replace = replace;\r\n//# sourceMappingURL=replace.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/replace.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/rollback.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/rollback.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.rollback = void 0;\r\nfunction rollback() {\r\n    // todo\r\n}\r\nexports.rollback = rollback;\r\n//# sourceMappingURL=rollback.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/rollback.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/select.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/select.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectDatabase = void 0;\r\nconst clone_1 = __webpack_require__(/*! ../clone */ \"./node_modules/@abaplint/runtime/build/src/clone.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nclass SelectDatabase {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    async select(target, input) {\r\n        var _a;\r\n        const { rows: rows } = await this.context.defaultDB().select(input);\r\n        if (target instanceof types_1.FieldSymbol) {\r\n            if (target.isAssigned() === false) {\r\n                throw \"select, fs not assigned\";\r\n            }\r\n            // @ts-ignore\r\n            target = target.getPointer();\r\n        }\r\n        target.clear();\r\n        if (rows.length === 0) {\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().subrc.set(4);\r\n            return;\r\n        }\r\n        if (target instanceof types_1.Structure) {\r\n            const result = {};\r\n            for (const column in rows[0]) {\r\n                result[column] = (0, clone_1.clone)(target.get()[column]).set(rows[0][column]);\r\n            }\r\n            target.set(new types_1.Structure(result));\r\n        }\r\n        else if (target instanceof types_1.Table) {\r\n            for (const row of rows) {\r\n                const targetRow = (0, clone_1.clone)(target.getRowType());\r\n                for (let columnName in row) {\r\n                    columnName = columnName.toLowerCase();\r\n                    // todo, non structured table = table with simple rows\r\n                    // @ts-ignore\r\n                    (_a = targetRow.get()[columnName]) === null || _a === void 0 ? void 0 : _a.set(row[columnName]);\r\n                }\r\n                // @ts-ignore\r\n                abap.statements.insertInternal({ table: target, data: targetRow });\r\n            }\r\n            // @ts-ignore\r\n            abap.builtin.sy.get().dbcnt.set(rows.length);\r\n        }\r\n        else {\r\n            throw new Error(\"Runtime, SELECT todo\");\r\n        }\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(0);\r\n    }\r\n}\r\nexports.SelectDatabase = SelectDatabase;\r\n//# sourceMappingURL=select.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/select.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/set_bit.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/set_bit.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.setBit = void 0;\r\nfunction setBit(number, hex, val) {\r\n    let hexFull = hex.get();\r\n    if (hexFull === \"\") {\r\n        hexFull = \"00\";\r\n    }\r\n    const fullByteLength = Math.ceil(hexFull.length / 2);\r\n    hexFull = hexFull.padEnd(fullByteLength * 2, \"0\");\r\n    const byteNum = Math.ceil(number.get() / 8);\r\n    if (byteNum > fullByteLength) {\r\n        return;\r\n    }\r\n    let pre = \"\";\r\n    let byte = \"\";\r\n    let post = \"\";\r\n    if (hexFull.length > 2) {\r\n        if (byteNum > 1) {\r\n            pre = hexFull.substr(0, (byteNum - 1) * 2);\r\n        }\r\n        byte = hexFull.substr((byteNum - 1) * 2, 2);\r\n        if (fullByteLength > byteNum) {\r\n            post = hexFull.substr(byteNum * 2, (fullByteLength - byteNum) * 2);\r\n        }\r\n    }\r\n    else {\r\n        byte = hexFull;\r\n    }\r\n    let bits = parseInt(byte, 16);\r\n    const bitMask = 1 << 8 - (number.get() - (byteNum - 1) * 8);\r\n    if ((val === null || val === void 0 ? void 0 : val.get()) === 0 || (val === null || val === void 0 ? void 0 : val.get()) === \"0\") {\r\n        bits = bits &= ~bitMask;\r\n    }\r\n    else {\r\n        bits = bits |= bitMask;\r\n    }\r\n    const reconstructed = pre + bits.toString(16).toUpperCase().padStart(2, \"0\") + post;\r\n    hex.set(reconstructed);\r\n}\r\nexports.setBit = setBit;\r\n//# sourceMappingURL=set_bit.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/set_bit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/set_locale.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/set_locale.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.setLocale = void 0;\r\nfunction setLocale(_source) {\r\n    // todo\r\n}\r\nexports.setLocale = setLocale;\r\n//# sourceMappingURL=set_locale.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/set_locale.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/shift.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/shift.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.shift = void 0;\r\nfunction shift(target, options) {\r\n    if ((options === null || options === void 0 ? void 0 : options.mode) === \"BYTE\") {\r\n        shift_byte_mode(target, options);\r\n    }\r\n    else {\r\n        shift_character_mode(target, options);\r\n    }\r\n}\r\nexports.shift = shift;\r\nfunction shift_character_mode(target, options) {\r\n    let value = target.get();\r\n    if (options === null || options === void 0 ? void 0 : options.deletingLeading) {\r\n        let leading = options.deletingLeading;\r\n        if (typeof leading !== \"string\") {\r\n            leading = leading.get();\r\n        }\r\n        const split = leading.split(\"\");\r\n        while (split.some(s => value.substr(0, 1) === s)) {\r\n            value = value.substr(1);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.deletingTrailing) {\r\n        let trailing = options.deletingTrailing;\r\n        if (typeof trailing !== \"string\") {\r\n            trailing = trailing.get();\r\n        }\r\n        if (value.endsWith(trailing)) {\r\n            value = \" \".repeat(trailing.length) + value.substring(0, value.length - trailing.length);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.places) {\r\n        const p = options.places.get();\r\n        if (options.circular) {\r\n            value = value.substr(p) + value.substr(0, p);\r\n        }\r\n        else {\r\n            value = value.substr(p);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.to) {\r\n        let to = \"\";\r\n        if (typeof options.to === \"string\") {\r\n            to = options.to;\r\n        }\r\n        else {\r\n            to = options.to.get();\r\n        }\r\n        const index = value.search(to);\r\n        if (index > 0) {\r\n            value = value.substr(index);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.circular) {\r\n        value = value.substr(1) + value.substr(0, 1);\r\n    }\r\n    else {\r\n        value = value.substr(1);\r\n    }\r\n    target.set(value);\r\n}\r\nfunction shift_byte_mode(target, options) {\r\n    let value = target.get();\r\n    if (options === null || options === void 0 ? void 0 : options.deletingLeading) {\r\n        let leading = options.deletingLeading;\r\n        if (typeof leading !== \"string\") {\r\n            leading = leading.get();\r\n        }\r\n        const split = leading.split(\"\");\r\n        while (split.some(s => value.substr(0, 2) === s)) {\r\n            value = value.substr(2);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.places) {\r\n        const p = options.places.get() * 2;\r\n        if (options.circular) {\r\n            value = value.substr(p) + value.substr(0, p);\r\n        }\r\n        else {\r\n            value = value.substr(p);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.to) {\r\n        let to = \"\";\r\n        if (typeof options.to === \"string\") {\r\n            to = options.to;\r\n        }\r\n        else {\r\n            to = options.to.get();\r\n        }\r\n        const index = value.search(to);\r\n        if (index > 0) {\r\n            value = value.substr(index);\r\n        }\r\n    }\r\n    else if (options === null || options === void 0 ? void 0 : options.circular) {\r\n        value = value.substr(2) + value.substr(0, 2);\r\n    }\r\n    else {\r\n        value = value.substr(2);\r\n    }\r\n    target.set(value);\r\n}\r\n//# sourceMappingURL=shift.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/shift.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/sort.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/sort.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sort = void 0;\r\nconst compare_1 = __webpack_require__(/*! ../compare */ \"./node_modules/@abaplint/runtime/build/src/compare/index.js\");\r\nfunction compare(a, b, input) {\r\n    const componentName = input.component;\r\n    const descending = input.descending;\r\n    let vala = a.get()[componentName];\r\n    let valb = b.get()[componentName];\r\n    if (componentName.toLowerCase() === \"table_line\") {\r\n        vala = a.get();\r\n        valb = b.get();\r\n    }\r\n    if ((0, compare_1.eq)(vala, valb)) {\r\n        return 0;\r\n    }\r\n    else if (descending && (0, compare_1.gt)(vala, valb)) {\r\n        return -1;\r\n    }\r\n    else if (!descending && (0, compare_1.lt)(vala, valb)) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\nfunction sort(input, options) {\r\n    if (options === null || options === void 0 ? void 0 : options.by) {\r\n        if (options.by.length === 0) {\r\n            throw \"SortByLengthZero\";\r\n        }\r\n        input.sort((a, b) => {\r\n            for (const c of options.by || []) {\r\n                const res = compare(a, b, c);\r\n                if (res !== 0) {\r\n                    return res;\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    else {\r\n        const descending = (options === null || options === void 0 ? void 0 : options.descending) === true ? true : false;\r\n        input.sort((a, b) => {\r\n            if ((0, compare_1.eq)(a, b)) {\r\n                return 0;\r\n            }\r\n            else if (descending && (0, compare_1.gt)(a, b)) {\r\n                return -1;\r\n            }\r\n            else if (!descending && (0, compare_1.lt)(a, b)) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.sort = sort;\r\n//# sourceMappingURL=sort.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/sort.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/split.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/split.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.split = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction split(param) {\r\n    const source = typeof param.source === \"string\" ? param.source : param.source.get();\r\n    const at = typeof param.at === \"string\" ? param.at : param.at.get();\r\n    const split = source.includes(at) ? source.split(at) : [];\r\n    if (source.endsWith(at)) {\r\n        split.pop();\r\n    }\r\n    if (param.table) {\r\n        param.table.clear();\r\n        for (const s of split) {\r\n            param.table.append(new types_1.String().set(s));\r\n        }\r\n        if (source !== \"\" && split.length === 0) {\r\n            param.table.append(new types_1.String().set(source));\r\n        }\r\n    }\r\n    if (param.targets) {\r\n        if (split.length === 0) {\r\n            split.push(source);\r\n        }\r\n        for (const t of param.targets) {\r\n            t.clear();\r\n            if (split.length > 0) {\r\n                t.set(split.shift().trimEnd());\r\n            }\r\n        }\r\n        if (split.length > 0) {\r\n            const concat = split.join(at);\r\n            const last = param.targets[param.targets.length - 1];\r\n            last.set(last.get() + at + concat);\r\n        }\r\n    }\r\n}\r\nexports.split = split;\r\n//# sourceMappingURL=split.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/split.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/translate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/translate.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.translate = void 0;\r\nfunction translate(input, i) {\r\n    let c = i;\r\n    if (typeof c !== \"string\") {\r\n        c = c.get();\r\n    }\r\n    if (c === \"LOWER\") {\r\n        input.set(input.get().toLowerCase());\r\n    }\r\n    else if (c === \"UPPER\") {\r\n        input.set(input.get().toUpperCase());\r\n    }\r\n    else {\r\n        const chunks = c.match(/.{1,2}/g);\r\n        for (const chunk of chunks || []) {\r\n            const search = chunk.substr(0, 1);\r\n            const replace = chunk.substr(1, 1);\r\n            input.set(input.get().replace(new RegExp(search, \"g\"), replace));\r\n        }\r\n    }\r\n}\r\nexports.translate = translate;\r\n//# sourceMappingURL=translate.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/translate.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/update_database.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/update_database.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UpdateDatabase = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nclass UpdateDatabase {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    async updateDatabase(table, options) {\r\n        if (options.table instanceof types_1.FieldSymbol) {\r\n            options.table = options.table.getPointer();\r\n        }\r\n        if (options.from instanceof types_1.FieldSymbol) {\r\n            options.from = options.from.getPointer();\r\n        }\r\n        if (typeof table !== \"string\") {\r\n            table = table.get();\r\n        }\r\n        // @ts-ignore\r\n        const keys = abap.DDIC[table.toUpperCase()].keyFields;\r\n        const where = [];\r\n        const set = [];\r\n        if (options.from) {\r\n            const structure = options.from.get();\r\n            for (const k of Object.keys(structure)) {\r\n                // todo, integers should not be surrounded by '\"'?\r\n                const str = k + ' = \"' + structure[k].get() + '\"';\r\n                if (keys.includes(k.toUpperCase())) {\r\n                    where.push(str);\r\n                }\r\n                else {\r\n                    set.push(str);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw \"updateDatabase, todo\";\r\n        }\r\n        const { subrc, dbcnt } = await this.context.defaultDB().update({ table, where: where.join(\" AND \"), set });\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().subrc.set(subrc);\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().dbcnt.set(dbcnt);\r\n        return subrc;\r\n    }\r\n}\r\nexports.UpdateDatabase = UpdateDatabase;\r\n//# sourceMappingURL=update_database.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/update_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/statements/write.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/statements/write.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WriteStatement = void 0;\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nclass WriteStatement {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n    write(source, options) {\r\n        var _a;\r\n        if ((options === null || options === void 0 ? void 0 : options.skipLine) === true) {\r\n            this.context.console.add(\"\\n\");\r\n        }\r\n        else {\r\n            if ((options === null || options === void 0 ? void 0 : options.newLine) === true && this.context.console.get().length > 0) {\r\n                this.context.console.add(\"\\n\");\r\n            }\r\n            let result = \"\";\r\n            if (typeof source === \"string\" || typeof source === \"number\") {\r\n                result = source.toString();\r\n            }\r\n            else if (source instanceof types_1.Structure) {\r\n                const obj = source.get();\r\n                for (const f in obj) {\r\n                    this.write(obj[f], Object.assign({}, options));\r\n                }\r\n            }\r\n            else if (source instanceof types_1.Float) {\r\n                if (((_a = options === null || options === void 0 ? void 0 : options.exponent) === null || _a === void 0 ? void 0 : _a.get()) === 0) {\r\n                    const tens = source.getRaw().toFixed(0).length - 1;\r\n                    if (options.noSign === true && source.getRaw() < 0) {\r\n                        result = source.getRaw().toFixed(17 - tens).replace(\".\", \",\");\r\n                        result = result.replace(\"-\", \"\");\r\n                    }\r\n                    else {\r\n                        result = source.getRaw().toFixed(16 - tens).replace(\".\", \",\");\r\n                    }\r\n                }\r\n                else {\r\n                    result = source.get().toString();\r\n                }\r\n            }\r\n            else {\r\n                result = source.get().toString();\r\n            }\r\n            if (options === null || options === void 0 ? void 0 : options.target) {\r\n                options.target.set(result);\r\n            }\r\n            else {\r\n                this.context.console.add(result);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.WriteStatement = WriteStatement;\r\n//# sourceMappingURL=write.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/statements/write.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/template_formatting.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/template_formatting.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.templateFormatting = void 0;\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nfunction templateFormatting(source, options) {\r\n    let text = source.get() + \"\";\r\n    if (options.currency !== undefined) {\r\n        throw \"template formatting with currency not supported\";\r\n    }\r\n    if (options.timestamp === \"iso\") {\r\n        text = text.substr(0, 4) + \"-\" + text.substr(4, 2) + \"-\" + text.substr(6, 2) + \"T\" + text.substr(8, 2) + \":\" + text.substr(10, 2) + \":\" + text.substr(12, 2);\r\n    }\r\n    if (options.date === \"iso\") {\r\n        text = text.substr(0, 4) + \"-\" + text.substr(4, 2) + \"-\" + text.substr(6, 2);\r\n    }\r\n    if (options.time === \"iso\") {\r\n        text = text.substr(0, 2) + \":\" + text.substr(2, 2) + \":\" + text.substr(4, 2);\r\n    }\r\n    if (options.width && options.pad) {\r\n        if (options.align === \"right\") {\r\n            text = text.trimEnd().padStart(options.width, options.pad);\r\n        }\r\n        else {\r\n            text = text.trimEnd().padEnd(options.width, options.pad);\r\n        }\r\n    }\r\n    else if (options.width) {\r\n        text = text.trimEnd().padEnd(options.width, \" \");\r\n    }\r\n    else if (options.decimals && source instanceof types_1.Integer) {\r\n        text = source.get() + \".\" + \"\".padEnd(options.decimals, \"0\");\r\n    }\r\n    else if (options.decimals && source instanceof types_1.Packed) {\r\n        text = source.get().toFixed(options.decimals);\r\n    }\r\n    return text;\r\n}\r\nexports.templateFormatting = templateFormatting;\r\n//# sourceMappingURL=template_formatting.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/template_formatting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/_javascript_date.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/_javascript_date.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getNumberFromDate = exports.getDateFromNumber = void 0;\r\nfunction getDateFromNumber(value) {\r\n    const msInOneDay = 24 * 60 * 60 * 1000;\r\n    const date = new Date(-62135596800000 + value * msInOneDay);\r\n    let removeJulianLeaps = 2;\r\n    if (value <= 577736) {\r\n        let beforeGregorian = date.getFullYear() <= 1582 ? date.getFullYear() : 1582;\r\n        if (date.getMonth() < 1 || (date.getMonth() === 1 && date.getDay() < 29)) {\r\n            beforeGregorian -= 1;\r\n        }\r\n        removeJulianLeaps = Math.floor(beforeGregorian / 100) - Math.floor(beforeGregorian / 400);\r\n    }\r\n    date.setTime(date.getTime() - removeJulianLeaps * msInOneDay);\r\n    let ret = date.getFullYear().toString().padStart(4, \"0\");\r\n    ret += (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    ret += date.getDate().toString().padStart(2, \"0\");\r\n    return ret;\r\n}\r\nexports.getDateFromNumber = getDateFromNumber;\r\nfunction getNumberFromDate(value) {\r\n    const msInOneDay = 24 * 60 * 60 * 1000;\r\n    const date = new Date(-62135596800000);\r\n    date.setUTCFullYear(parseInt(value.substr(0, 4), 10));\r\n    date.setUTCMonth(parseInt(value.substr(4, 2), 10) - 1);\r\n    date.setUTCDate(parseInt(value.substr(6, 2), 10));\r\n    let days = Math.floor((date.getTime() + 62135596800000) / msInOneDay);\r\n    let addJulianLeaps = 2;\r\n    if (days <= 577736) {\r\n        let beforeGregorian = date.getFullYear() <= 1582 ? date.getFullYear() : 1582;\r\n        if (date.getMonth() < 1 || (date.getMonth() === 1 && date.getDay() < 29)) {\r\n            beforeGregorian -= 1;\r\n        }\r\n        addJulianLeaps = Math.floor(beforeGregorian / 100) - Math.floor(beforeGregorian / 400);\r\n    }\r\n    days = days + addJulianLeaps;\r\n    return days;\r\n}\r\nexports.getNumberFromDate = getNumberFromDate;\r\n//# sourceMappingURL=_javascript_date.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/_javascript_date.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/abap_object.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/abap_object.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPObject = void 0;\r\nclass ABAPObject {\r\n    constructor(input) {\r\n        this.qualifiedName = input === null || input === void 0 ? void 0 : input.qualifiedName;\r\n        this.clear();\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n    }\r\n    getQualifiedName() {\r\n        return this.qualifiedName;\r\n    }\r\n    set(value) {\r\n        if (value instanceof ABAPObject) {\r\n            this.value = value.get();\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    }\r\n}\r\nexports.ABAPObject = ABAPObject;\r\n//# sourceMappingURL=abap_object.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/abap_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/character.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/character.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Character = void 0;\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nclass Character {\r\n    constructor(input) {\r\n        this.length = (input === null || input === void 0 ? void 0 : input.length) ? input === null || input === void 0 ? void 0 : input.length : 1;\r\n        if (this.length <= 0) {\r\n            throw \"Character, invalid length\";\r\n        }\r\n        this.qualifiedName = input === null || input === void 0 ? void 0 : input.qualifiedName;\r\n        this.clear();\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"string\" || typeof value === \"number\") {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = value.get() + \"\";\r\n        }\r\n        if (this.value.length > this.length) {\r\n            this.value = this.value.substr(0, this.length);\r\n            // todo, maintain consistent length\r\n            //    } else if (this.value.length < this.length) {\r\n            //      this.value.padEnd(this.length, \" \");\r\n        }\r\n        return this;\r\n    }\r\n    getQualifiedName() {\r\n        return this.qualifiedName;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    clear() {\r\n        // todo, maintain consistent length\r\n        //    this.value = \" \".repeat(this.length);\r\n        this.value = \"\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        if ((input.offset && input.offset >= this.length)\r\n            || (input.offset && input.offset < 0)\r\n            || (input.length && input.length < 0)) {\r\n            // @ts-ignore\r\n            if (abap.Classes[\"CX_SY_RANGE_OUT_OF_BOUNDS\"] !== undefined) {\r\n                // @ts-ignore\r\n                throw new abap.Classes[\"CX_SY_RANGE_OUT_OF_BOUNDS\"]();\r\n            }\r\n            else {\r\n                throw \"Global class CX_SY_RANGE_OUT_OF_BOUNDS not found\";\r\n            }\r\n        }\r\n        let ret = this.value;\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            // @ts-ignore\r\n            ret = ret.substr(input.offset);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            // @ts-ignore\r\n            ret = ret.substr(0, input.length);\r\n        }\r\n        const r = new Character({ length: ret.length });\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.Character = Character;\r\n//# sourceMappingURL=character.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/character.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/data_reference.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/data_reference.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataReference = void 0;\r\nconst string_1 = __webpack_require__(/*! ./string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nclass DataReference {\r\n    constructor(type) {\r\n        this.pointer = undefined;\r\n        this.type = type;\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    assign(pointer) {\r\n        this.pointer = pointer;\r\n    }\r\n    unassign() {\r\n        this.pointer = undefined;\r\n    }\r\n    getPointer() {\r\n        return this.pointer;\r\n    }\r\n    ///////////////\r\n    clear() {\r\n        this.unassign();\r\n        //    return this.pointer?.clear();\r\n    }\r\n    get() {\r\n        var _a;\r\n        if (this.pointer === this) {\r\n            throw \"Cyclic data reference\";\r\n        }\r\n        // @ts-ignore\r\n        return (_a = this.pointer) === null || _a === void 0 ? void 0 : _a.get();\r\n    }\r\n    array() {\r\n        var _a;\r\n        // @ts-ignore\r\n        return (_a = this.pointer) === null || _a === void 0 ? void 0 : _a.array();\r\n    }\r\n    set(value) {\r\n        var _a;\r\n        if (value instanceof DataReference) {\r\n            return this.pointer = value.getPointer();\r\n        }\r\n        else {\r\n            return (_a = this.pointer) === null || _a === void 0 ? void 0 : _a.set(value);\r\n        }\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        // Assuming we're interested in Strings here, for now...\r\n        let ret = this.get();\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            ret = ret.substr(input.offset);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            ret = ret.substr(0, input.length);\r\n        }\r\n        const r = new string_1.String();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.DataReference = DataReference;\r\n//# sourceMappingURL=data_reference.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/data_reference.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/date.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/date.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Date = void 0;\r\nconst string_1 = __webpack_require__(/*! ./string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst _javascript_date_1 = __webpack_require__(/*! ./_javascript_date */ \"./node_modules/@abaplint/runtime/build/src/types/_javascript_date.js\");\r\nconst float_1 = __webpack_require__(/*! ./float */ \"./node_modules/@abaplint/runtime/build/src/types/float.js\");\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nclass Date {\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            if (value <= 0 || value > 3652060) {\r\n                this.value = \"00000000\";\r\n            }\r\n            else {\r\n                this.value = (0, _javascript_date_1.getDateFromNumber)(value);\r\n            }\r\n        }\r\n        else if (value instanceof float_1.Float) {\r\n            this.set(Math.round(value.getRaw()));\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.set(value.get());\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = \"00000000\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getNumeric() {\r\n        return (0, _javascript_date_1.getNumberFromDate)(this.value);\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        let ret = this.value;\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            // @ts-ignore\r\n            ret = ret.substr(input.offset);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            // @ts-ignore\r\n            ret = ret.substr(0, input.length);\r\n        }\r\n        const r = new string_1.String();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.Date = Date;\r\n//# sourceMappingURL=date.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/date.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/decfloat34.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/decfloat34.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DecFloat34 = void 0;\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst hex_1 = __webpack_require__(/*! ./hex */ \"./node_modules/@abaplint/runtime/build/src/types/hex.js\");\r\nconst xstring_1 = __webpack_require__(/*! ./xstring */ \"./node_modules/@abaplint/runtime/build/src/types/xstring.js\");\r\nclass DecFloat34 {\r\n    constructor() {\r\n        this.value = 0;\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            this.value = value;\r\n        }\r\n        else if (typeof value === \"string\" && value.trim().length === 0) {\r\n            this.value = 0;\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            this.value = parseFloat(value);\r\n        }\r\n        else if (value instanceof _1.Float) {\r\n            this.value = value.getRaw();\r\n        }\r\n        else if (value instanceof hex_1.Hex || value instanceof xstring_1.XString) {\r\n            // todo, how/if should this work?\r\n            this.set(parseInt(value.get(), 16));\r\n        }\r\n        else {\r\n            this.set(value.get());\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = 0;\r\n    }\r\n    getRaw() {\r\n        return this.value;\r\n    }\r\n    get() {\r\n        let text = new Number(this.value).toString();\r\n        text = text.replace(\".\", \",\");\r\n        return text;\r\n    }\r\n}\r\nexports.DecFloat34 = DecFloat34;\r\n//# sourceMappingURL=decfloat34.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/decfloat34.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/field_symbol.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/field_symbol.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldSymbol = void 0;\r\nconst table_1 = __webpack_require__(/*! ./table */ \"./node_modules/@abaplint/runtime/build/src/types/table.js\");\r\nconst string_1 = __webpack_require__(/*! ./string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst hex_1 = __webpack_require__(/*! ./hex */ \"./node_modules/@abaplint/runtime/build/src/types/hex.js\");\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nclass FieldSymbol {\r\n    constructor(type) {\r\n        this.pointer = undefined;\r\n        this.casting = false;\r\n        this.type = type;\r\n    }\r\n    assign(pointer) {\r\n        this.pointer = pointer;\r\n    }\r\n    setCasting() {\r\n        this.casting = true;\r\n    }\r\n    unassign() {\r\n        this.pointer = undefined;\r\n    }\r\n    isAssigned() {\r\n        return this.pointer !== undefined;\r\n    }\r\n    getPointer() {\r\n        if (this.casting) {\r\n            // todo, this wont work for everything, eg changing CASTING'ed values\r\n            return this.get();\r\n        }\r\n        return this.pointer;\r\n    }\r\n    ///////////////\r\n    clear() {\r\n        var _a;\r\n        return (_a = this.pointer) === null || _a === void 0 ? void 0 : _a.clear();\r\n    }\r\n    get() {\r\n        var _a, _b, _c;\r\n        if (this.casting) {\r\n            if (this.type instanceof hex_1.Hex) {\r\n                // @ts-ignore\r\n                const ret = new string_1.String().set(Buffer.from((_a = this.pointer) === null || _a === void 0 ? void 0 : _a.get(), \"utf16le\").toString(\"hex\"));\r\n                return ret.get();\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                const ret = new string_1.String().set(Buffer.from((_b = this.pointer) === null || _b === void 0 ? void 0 : _b.get(), \"hex\").toString(\"utf16le\"));\r\n                return ret.get();\r\n            }\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            return (_c = this.pointer) === null || _c === void 0 ? void 0 : _c.get();\r\n        }\r\n    }\r\n    appendInitial() {\r\n        if (this.pointer instanceof table_1.Table) {\r\n            return this.pointer.appendInitial();\r\n        }\r\n        return undefined;\r\n    }\r\n    array() {\r\n        var _a;\r\n        // @ts-ignore\r\n        return (_a = this.pointer) === null || _a === void 0 ? void 0 : _a.array();\r\n    }\r\n    set(value) {\r\n        var _a;\r\n        (_a = this.pointer) === null || _a === void 0 ? void 0 : _a.set(value);\r\n        return this;\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        // Assuming we're interested in Strings here, for now...\r\n        let ret = this.get();\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            ret = ret.substr(input.offset);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            ret = ret.substr(0, input.length);\r\n        }\r\n        const r = new string_1.String();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.FieldSymbol = FieldSymbol;\r\n//# sourceMappingURL=field_symbol.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/field_symbol.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/float.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/float.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Float = void 0;\r\nconst hex_1 = __webpack_require__(/*! ./hex */ \"./node_modules/@abaplint/runtime/build/src/types/hex.js\");\r\nconst xstring_1 = __webpack_require__(/*! ./xstring */ \"./node_modules/@abaplint/runtime/build/src/types/xstring.js\");\r\n/*\r\nfunction getNumberParts(x: number) {\r\n  if(isNaN(x)) {\r\n    throw \"Float NaN\";\r\n  }\r\n  const sig = x > 0 ? 1 : -1;\r\n  if (!isFinite(x)) {\r\n    throw \"Float not finite\";\r\n  }\r\n  x = Math.abs(x);\r\n  const exp = Math.floor(Math.log(x) * Math.LOG2E) - 52;\r\n  const man = x / Math.pow(2, exp);\r\n  return {mantissa: sig * man, exponent: exp};\r\n}\r\n*/\r\nclass Float {\r\n    constructor() {\r\n        this.value = 0;\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            this.value = value;\r\n        }\r\n        else if (typeof value === \"string\" && value.trim().length === 0) {\r\n            this.value = 0;\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            this.value = parseFloat(value);\r\n        }\r\n        else if (value instanceof Float) {\r\n            this.value = value.getRaw();\r\n        }\r\n        else if (value instanceof hex_1.Hex || value instanceof xstring_1.XString) {\r\n            // todo, how/if should this work?\r\n            this.set(parseInt(value.get(), 16));\r\n        }\r\n        else {\r\n            this.set(value.get());\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = 0;\r\n    }\r\n    getRaw() {\r\n        return this.value;\r\n    }\r\n    get() {\r\n        let text = new Number(this.value).toExponential(16);\r\n        text = text.replace(\".\", \",\");\r\n        if (text.includes(\"e+\")) {\r\n            const split = text.split(\"e+\");\r\n            const mantissa = split[0];\r\n            const exponent = split[1].padStart(2, \"0\");\r\n            return mantissa + \"E+\" + exponent;\r\n        }\r\n        else {\r\n            const split = text.split(\"e-\");\r\n            const mantissa = split[0];\r\n            const exponent = split[1].padStart(2, \"0\");\r\n            return mantissa + \"E-\" + exponent;\r\n        }\r\n    }\r\n}\r\nexports.Float = Float;\r\n//# sourceMappingURL=float.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/float.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/hex.js":
/*!***************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/hex.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Hex = void 0;\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nconst float_1 = __webpack_require__(/*! ./float */ \"./node_modules/@abaplint/runtime/build/src/types/float.js\");\r\nconst xstring_1 = __webpack_require__(/*! ./xstring */ \"./node_modules/@abaplint/runtime/build/src/types/xstring.js\");\r\nclass Hex {\r\n    constructor(input) {\r\n        this.length = (input === null || input === void 0 ? void 0 : input.length) ? input === null || input === void 0 ? void 0 : input.length : 1;\r\n        this.value = \"0\".repeat(this.length * 2);\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"string\") {\r\n            this.value = value;\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            if (value < 0) {\r\n                const maxVal = Math.pow(2, this.length * 8);\r\n                this.value = Math.round(value + maxVal).toString(16);\r\n            }\r\n            else {\r\n                this.value = Math.round(value).toString(16);\r\n            }\r\n            this.value = this.value.padStart(this.length * 2, \"0\");\r\n        }\r\n        else {\r\n            let v = value.get();\r\n            if (value instanceof float_1.Float) {\r\n                v = value.getRaw();\r\n                this.set(v);\r\n            }\r\n            if (typeof v === \"number\") {\r\n                this.set(v);\r\n            }\r\n            else {\r\n                this.value = v;\r\n                if (this.value.match(/^(?![A-F0-9])/)) {\r\n                    this.value = \"\";\r\n                }\r\n            }\r\n        }\r\n        if (this.value.length > this.length * 2) {\r\n            this.value = this.value.substr(0, this.length * 2);\r\n        }\r\n        if (this.value.length < this.length * 2) {\r\n            this.value = this.value.padEnd(this.length * 2, \"0\");\r\n        }\r\n        this.value = this.value.toUpperCase();\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    clear() {\r\n        this.value = \"\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        let ret = this.value;\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            // @ts-ignore\r\n            ret = ret.substr(input.offset * 2);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            // @ts-ignore\r\n            ret = ret.substr(0, input.length * 2);\r\n        }\r\n        const r = new xstring_1.XString();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.Hex = Hex;\r\n//# sourceMappingURL=hex.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/hex.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./abap_object */ \"./node_modules/@abaplint/runtime/build/src/types/abap_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./character */ \"./node_modules/@abaplint/runtime/build/src/types/character.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_reference */ \"./node_modules/@abaplint/runtime/build/src/types/data_reference.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./date */ \"./node_modules/@abaplint/runtime/build/src/types/date.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./decfloat34 */ \"./node_modules/@abaplint/runtime/build/src/types/decfloat34.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_symbol */ \"./node_modules/@abaplint/runtime/build/src/types/field_symbol.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./float */ \"./node_modules/@abaplint/runtime/build/src/types/float.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hex */ \"./node_modules/@abaplint/runtime/build/src/types/hex.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./integer */ \"./node_modules/@abaplint/runtime/build/src/types/integer.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./numc */ \"./node_modules/@abaplint/runtime/build/src/types/numc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./packed */ \"./node_modules/@abaplint/runtime/build/src/types/packed.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./structure */ \"./node_modules/@abaplint/runtime/build/src/types/structure.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table */ \"./node_modules/@abaplint/runtime/build/src/types/table.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./time */ \"./node_modules/@abaplint/runtime/build/src/types/time.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./utc_long */ \"./node_modules/@abaplint/runtime/build/src/types/utc_long.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./xstring */ \"./node_modules/@abaplint/runtime/build/src/types/xstring.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/integer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/integer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Integer = void 0;\r\nconst float_1 = __webpack_require__(/*! ./float */ \"./node_modules/@abaplint/runtime/build/src/types/float.js\");\r\nconst hex_1 = __webpack_require__(/*! ./hex */ \"./node_modules/@abaplint/runtime/build/src/types/hex.js\");\r\nconst xstring_1 = __webpack_require__(/*! ./xstring */ \"./node_modules/@abaplint/runtime/build/src/types/xstring.js\");\r\nclass Integer {\r\n    constructor() {\r\n        this.value = 0;\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            this.value = value;\r\n        }\r\n        else if (typeof value === \"string\" && value.trim().length === 0) {\r\n            this.value = 0;\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            if (/^\\s*-?\\+?\\d+\\.?\\d*$/i.test(value) === false) {\r\n                // @ts-ignore\r\n                if (abap.Classes[\"CX_SY_CONVERSION_NO_NUMBER\"] !== undefined) {\r\n                    // @ts-ignore\r\n                    throw new abap.Classes[\"CX_SY_CONVERSION_NO_NUMBER\"]();\r\n                }\r\n                else {\r\n                    throw \"Global class CX_SY_CONVERSION_NO_NUMBER not found\";\r\n                }\r\n            }\r\n            this.value = parseInt(value, 10);\r\n        }\r\n        else if (value instanceof float_1.Float) {\r\n            this.set(Math.round(value.getRaw()));\r\n        }\r\n        else if (value instanceof hex_1.Hex || value instanceof xstring_1.XString) {\r\n            let num = parseInt(value.get(), 16);\r\n            // handle two complement,\r\n            if (value instanceof hex_1.Hex && value.getLength() >= 4) {\r\n                const maxVal = Math.pow(2, value.get().length / 2 * 8);\r\n                if (num > maxVal / 2 - 1) {\r\n                    num = num - maxVal;\r\n                }\r\n            }\r\n            this.set(num);\r\n        }\r\n        else {\r\n            this.set(value.get());\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = 0;\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n}\r\nexports.Integer = Integer;\r\n//# sourceMappingURL=integer.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/integer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/numc.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/numc.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Numc = void 0;\r\nclass Numc {\r\n    constructor(input) {\r\n        this.length = (input === null || input === void 0 ? void 0 : input.length) ? input === null || input === void 0 ? void 0 : input.length : 1;\r\n        this.clear();\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            this.value = value.toString();\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            this.value = parseInt(value, 10) + \"\";\r\n        }\r\n        else {\r\n            this.set(value.get());\r\n            return;\r\n        }\r\n        if (this.value.length > this.length) {\r\n            this.value = this.value.substr(this.value.length - this.length, this.length);\r\n        }\r\n        else {\r\n            const pad = this.length - this.value.length;\r\n            if (pad > 0) {\r\n                this.value = \"0\".repeat(pad) + this.value;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    clear() {\r\n        this.value = \"0\".repeat(this.length);\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getOffset(_input) {\r\n        throw \"todo, runtime, numc getOffset()\";\r\n    }\r\n}\r\nexports.Numc = Numc;\r\n//# sourceMappingURL=numc.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/numc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/packed.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/packed.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Packed = void 0;\r\nconst float_1 = __webpack_require__(/*! ./float */ \"./node_modules/@abaplint/runtime/build/src/types/float.js\");\r\nclass Packed {\r\n    constructor(input) {\r\n        this.value = 0;\r\n        this.length = 666;\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            this.length = input.length;\r\n        }\r\n        this.decimals = 0;\r\n        if (input === null || input === void 0 ? void 0 : input.decimals) {\r\n            this.decimals = input.decimals;\r\n        }\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            this.value = value;\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            this.value = parseFloat(value);\r\n        }\r\n        else if (value instanceof float_1.Float) {\r\n            this.value = value.getRaw();\r\n        }\r\n        else {\r\n            this.value = value.get();\r\n        }\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    getDecimals() {\r\n        return this.decimals;\r\n    }\r\n    clear() {\r\n        this.value = 0;\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n}\r\nexports.Packed = Packed;\r\n//# sourceMappingURL=packed.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/packed.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/string.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/string.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.String = void 0;\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nconst character_1 = __webpack_require__(/*! ./character */ \"./node_modules/@abaplint/runtime/build/src/types/character.js\");\r\nconst integer_1 = __webpack_require__(/*! ./integer */ \"./node_modules/@abaplint/runtime/build/src/types/integer.js\");\r\nclass String {\r\n    constructor() {\r\n        this.value = \"\";\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"string\") {\r\n            this.value = value;\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            this.value = value.toString();\r\n        }\r\n        else if (value instanceof character_1.Character) {\r\n            // replace trailing blanks if the source is a Character string\r\n            this.value = value.get().replace(/[ ]*$/g, \"\");\r\n        }\r\n        else if (value instanceof integer_1.Integer) {\r\n            const lv_sign = (parseInt(value.get(), 10) >= 0) ? \" \" : \"-\";\r\n            this.value = value.get() + lv_sign;\r\n        }\r\n        else {\r\n            this.value = value.get() + \"\";\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = \"\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        if ((input.offset && input.offset > this.value.length)\r\n            || (input.offset && input.offset < 0)\r\n            || (input.length && input.length < 0)) {\r\n            // @ts-ignore\r\n            if (abap.Classes[\"CX_SY_RANGE_OUT_OF_BOUNDS\"] !== undefined) {\r\n                // @ts-ignore\r\n                throw new abap.Classes[\"CX_SY_RANGE_OUT_OF_BOUNDS\"]();\r\n            }\r\n            else {\r\n                throw \"Global class CX_SY_RANGE_OUT_OF_BOUNDS not found\";\r\n            }\r\n        }\r\n        let ret = this.value;\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            // @ts-ignore\r\n            ret = ret.substr(input.offset);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            // @ts-ignore\r\n            ret = ret.substr(0, input.length);\r\n        }\r\n        const r = new String();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.String = String;\r\n//# sourceMappingURL=string.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/string.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/structure.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/structure.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Structure = void 0;\r\nconst clone_1 = __webpack_require__(/*! ../clone */ \"./node_modules/@abaplint/runtime/build/src/clone.js\");\r\nconst field_symbol_1 = __webpack_require__(/*! ./field_symbol */ \"./node_modules/@abaplint/runtime/build/src/types/field_symbol.js\");\r\nconst table_1 = __webpack_require__(/*! ./table */ \"./node_modules/@abaplint/runtime/build/src/types/table.js\");\r\nclass Structure {\r\n    constructor(fields, qualifiedName) {\r\n        this.value = fields;\r\n        this.qualifiedName = qualifiedName === null || qualifiedName === void 0 ? void 0 : qualifiedName.toUpperCase();\r\n    }\r\n    clear() {\r\n        for (const f in this.value) {\r\n            // @ts-ignore\r\n            this.value[f].clear();\r\n        }\r\n        return this;\r\n    }\r\n    getQualifiedName() {\r\n        return this.qualifiedName;\r\n    }\r\n    set(input) {\r\n        if (input === undefined) {\r\n            return;\r\n        }\r\n        if (input instanceof field_symbol_1.FieldSymbol) {\r\n            this.set(input.getPointer());\r\n        }\r\n        else if (input instanceof table_1.Table) {\r\n            throw \"Structure, input is a table\";\r\n        }\r\n        else if (input instanceof Structure) {\r\n            const obj = input.get();\r\n            for (const f in obj) {\r\n                // @ts-ignore\r\n                this.value[f].set((0, clone_1.clone)(obj[f]));\r\n            }\r\n        }\r\n        else {\r\n            this.setCharacter(input);\r\n        }\r\n        return this;\r\n    }\r\n    setCharacter(input) {\r\n        this.clear();\r\n        let val = input;\r\n        if (typeof val !== \"string\") {\r\n            val = val.get() + \"\";\r\n        }\r\n        for (const key of Object.keys(this.value)) {\r\n            const targetLength = this.value[key].getLength();\r\n            this.value[key].set(val.substr(0, targetLength));\r\n            val = val.substr(targetLength);\r\n        }\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n}\r\nexports.Structure = Structure;\r\n//# sourceMappingURL=structure.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/structure.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/table.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/table.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Table = exports.LoopIndex = exports.TableAccessType = void 0;\r\nconst integer_1 = __webpack_require__(/*! ./integer */ \"./node_modules/@abaplint/runtime/build/src/types/integer.js\");\r\nconst string_1 = __webpack_require__(/*! ./string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst clone_1 = __webpack_require__(/*! ../clone */ \"./node_modules/@abaplint/runtime/build/src/clone.js\");\r\nconst field_symbol_1 = __webpack_require__(/*! ./field_symbol */ \"./node_modules/@abaplint/runtime/build/src/types/field_symbol.js\");\r\nconst data_reference_1 = __webpack_require__(/*! ./data_reference */ \"./node_modules/@abaplint/runtime/build/src/types/data_reference.js\");\r\nconst insert_internal_1 = __webpack_require__(/*! ../statements/insert_internal */ \"./node_modules/@abaplint/runtime/build/src/statements/insert_internal.js\");\r\nvar TableAccessType;\r\n(function (TableAccessType) {\r\n    TableAccessType[\"standard\"] = \"STANDARD\";\r\n    TableAccessType[\"sorted\"] = \"SORTED\";\r\n    TableAccessType[\"hashed\"] = \"HASHED\";\r\n    TableAccessType[\"index\"] = \"INDEX\";\r\n    TableAccessType[\"any\"] = \"ANY\";\r\n})(TableAccessType = exports.TableAccessType || (exports.TableAccessType = {}));\r\nclass LoopIndex {\r\n    constructor(start) {\r\n        this.index = start;\r\n    }\r\n}\r\nexports.LoopIndex = LoopIndex;\r\nclass Table {\r\n    constructor(rowType, options) {\r\n        this.value = [];\r\n        this.loops = new Set();\r\n        this.rowType = rowType;\r\n        this.options = options;\r\n    }\r\n    getOptions() {\r\n        return this.options;\r\n    }\r\n    startLoop(start = 0) {\r\n        const l = new LoopIndex(start);\r\n        this.loops.add(l);\r\n        return l;\r\n    }\r\n    unregisterLoop(loop) {\r\n        this.loops.delete(loop);\r\n    }\r\n    getRowType() {\r\n        return this.rowType;\r\n    }\r\n    // Modifications to the array must be done inside this class, in order to keep track of LOOP indexes\r\n    array() {\r\n        return this.value;\r\n    }\r\n    clear() {\r\n        this.value = [];\r\n    }\r\n    set(tab) {\r\n        this.clear();\r\n        for (const a of tab.array()) {\r\n            // this clones the values, and add sorting if required\r\n            (0, insert_internal_1.insertInternal)({ table: this, data: a });\r\n        }\r\n    }\r\n    insertIndex(item, index) {\r\n        const val = this.getValue(item);\r\n        this.value.splice(index, 0, val);\r\n        for (const l of this.loops.values()) {\r\n            if (l.index <= index) {\r\n                l.index++;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n    deleteIndex(index) {\r\n        if (index > this.value.length) {\r\n            return;\r\n        }\r\n        if (index === this.value.length - 1) {\r\n            this.value.pop(); // pop'ing is faster than splice\r\n        }\r\n        else if (index === 0) {\r\n            this.value.shift();\r\n        }\r\n        else {\r\n            this.value.splice(index, 1);\r\n        }\r\n        for (const l of this.loops.values()) {\r\n            if (l.index >= index) {\r\n                l.index--;\r\n            }\r\n        }\r\n    }\r\n    append(item, cloneRow = true) {\r\n        if (item instanceof field_symbol_1.FieldSymbol) {\r\n            const p = item.getPointer();\r\n            if (p === undefined) {\r\n                throw new Error(\"APPEND, fs not assigned\");\r\n            }\r\n            this.value.push(p);\r\n            return item;\r\n        }\r\n        else if (item instanceof data_reference_1.DataReference) {\r\n            const ref = new data_reference_1.DataReference(item.getType());\r\n            ref.assign(item.getPointer());\r\n            this.value.push(ref);\r\n            return ref;\r\n        }\r\n        else {\r\n            const val = this.getValue(item, cloneRow);\r\n            const p = (0, clone_1.clone)(this.rowType);\r\n            p.set(val);\r\n            this.value.push(p);\r\n            return p;\r\n        }\r\n    }\r\n    appendInitial() {\r\n        // note that this will clone the object\r\n        this.append(this.rowType);\r\n        // @ts-ignore\r\n        abap.builtin.sy.get().tabix.set(this.value.length);\r\n        return this.value[this.value.length - 1];\r\n    }\r\n    sort(compareFn) {\r\n        this.value.sort(compareFn);\r\n    }\r\n    ///////////////////////////\r\n    getValue(item, cloneRow = true) {\r\n        // make sure to do conversion if needed\r\n        if (typeof item === \"number\") {\r\n            const tmp = (0, clone_1.clone)(this.getRowType());\r\n            tmp.set(new integer_1.Integer().set(item));\r\n            return tmp;\r\n        }\r\n        else if (typeof item === \"string\") {\r\n            const tmp = (0, clone_1.clone)(this.getRowType());\r\n            tmp.set(new string_1.String().set(item));\r\n            return tmp;\r\n        }\r\n        else if (cloneRow === true) {\r\n            const tmp = (0, clone_1.clone)(this.getRowType());\r\n            tmp.set(item);\r\n            return tmp;\r\n        }\r\n        else {\r\n            return item;\r\n        }\r\n    }\r\n}\r\nexports.Table = Table;\r\n//# sourceMappingURL=table.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/time.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/time.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Time = void 0;\r\nconst string_1 = __webpack_require__(/*! ./string */ \"./node_modules/@abaplint/runtime/build/src/types/string.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/runtime/build/src/types/index.js\");\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nclass Time {\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"number\") {\r\n            const date = new Date();\r\n            date.setTime(value * 1000);\r\n            this.value = date.getUTCHours().toString().padStart(2, \"0\") +\r\n                date.getUTCMinutes().toString().padStart(2, \"0\") +\r\n                date.getUTCSeconds().toString().padStart(2, \"0\");\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            this.value = value;\r\n        }\r\n        else if (value instanceof _1.Float) {\r\n            this.set(Math.round(value.getRaw()));\r\n        }\r\n        else {\r\n            this.set(value.get());\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = \"000000\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getNumeric() {\r\n        const hours = parseInt(this.value.substr(0, 2), 10);\r\n        const minutes = parseInt(this.value.substr(2, 2), 10);\r\n        const seconds = parseInt(this.value.substr(4, 2), 10);\r\n        return hours * 3600 + minutes * 60 + seconds;\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        let ret = this.value;\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            // @ts-ignore\r\n            ret = ret.substr(input.offset);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            // @ts-ignore\r\n            ret = ret.substr(0, input.length);\r\n        }\r\n        const r = new string_1.String();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.Time = Time;\r\n//# sourceMappingURL=time.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/utc_long.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/utc_long.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UTCLong = void 0;\r\nclass UTCLong {\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n    getOffset(_input) {\r\n        throw new Error(\"Method not implemented, getOffset(), utcLong\");\r\n    }\r\n    set(_value) {\r\n        // todo\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.value = \"\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n}\r\nexports.UTCLong = UTCLong;\r\n//# sourceMappingURL=utc_long.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/utc_long.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/types/xstring.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/types/xstring.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XString = void 0;\r\nconst _parse_1 = __webpack_require__(/*! ../operators/_parse */ \"./node_modules/@abaplint/runtime/build/src/operators/_parse.js\");\r\nclass XString {\r\n    constructor() {\r\n        this.value = \"\";\r\n    }\r\n    set(value) {\r\n        if (typeof value === \"string\") {\r\n            this.value = value;\r\n            const finalLength = Math.ceil(this.value.length / 2) * 2;\r\n            this.value = this.value.padEnd(finalLength, \"0\");\r\n        }\r\n        else {\r\n            const v = value.get();\r\n            if (typeof v === \"number\") {\r\n                this.value = v.toString(16);\r\n                const finalLength = Math.ceil(this.value.length / 2) * 2;\r\n                this.value = this.value.padStart(finalLength, \"0\");\r\n            }\r\n            else {\r\n                this.set(v);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        this.value = \"\";\r\n    }\r\n    get() {\r\n        return this.value;\r\n    }\r\n    getOffset(input) {\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            input.offset = (0, _parse_1.parse)(input.offset);\r\n        }\r\n        if (input === null || input === void 0 ? void 0 : input.length) {\r\n            input.length = (0, _parse_1.parse)(input.length);\r\n        }\r\n        let ret = this.value;\r\n        if (input === null || input === void 0 ? void 0 : input.offset) {\r\n            // @ts-ignore\r\n            ret = ret.substr(input.offset * 2);\r\n        }\r\n        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {\r\n            // @ts-ignore\r\n            ret = ret.substr(0, input.length * 2);\r\n        }\r\n        const r = new XString();\r\n        r.set(ret);\r\n        return r;\r\n    }\r\n}\r\nexports.XString = XString;\r\n//# sourceMappingURL=xstring.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/types/xstring.js?");

/***/ }),

/***/ "./node_modules/@abaplint/runtime/build/src/unit_test.js":
/*!***************************************************************!*\
  !*** ./node_modules/@abaplint/runtime/build/src/unit_test.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnitTestResult = void 0;\r\n/* eslint-disable max-len */\r\nclass UnitTestMethodResult {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.result = undefined;\r\n        this.result = undefined;\r\n    }\r\n    pass() {\r\n        this.result = \"Pass\";\r\n    }\r\n    fail() {\r\n        this.result = \"Fail\";\r\n    }\r\n    skip() {\r\n        this.result = \"Skip\";\r\n    }\r\n}\r\nclass UnitTestClassResult {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.methods = [];\r\n    }\r\n    addMethod(name) {\r\n        const ret = new UnitTestMethodResult(name);\r\n        this.methods.push(ret);\r\n        return ret;\r\n    }\r\n}\r\nclass UnitTestObjectResult {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.classes = [];\r\n    }\r\n    addTestClass(name) {\r\n        const ret = new UnitTestClassResult(name);\r\n        this.classes.push(ret);\r\n        return ret;\r\n    }\r\n}\r\nclass UnitTestResult {\r\n    constructor() {\r\n        this.objects = [];\r\n    }\r\n    addObject(name) {\r\n        const ret = new UnitTestObjectResult(name);\r\n        this.objects.push(ret);\r\n        return ret;\r\n    }\r\n    xUnitXML() {\r\n        // https://xunit.net/docs/format-xml-v2\r\n        // <assemblies> = project\r\n        // <assembly> = global object/global class\r\n        // <collection> = local class\r\n        // <test> = method\r\n        let ret = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<assemblies>\\n`;\r\n        for (const obj of this.objects) {\r\n            ret += `  <assembly name=\"${obj.name}\" test-framework=\"abap-framework\" environment=\"abap-environment\">\\n`;\r\n            for (const clas of obj.classes) {\r\n                ret += `    <collection name=\"${clas.name}\">\\n`;\r\n                for (const meth of clas.methods) {\r\n                    ret += `      ` +\r\n                        `<test name=\"${obj.name}.${clas.name}.${meth.name}\" type=\"${obj.name}.${clas.name}\" method=\"${obj.name}.${clas.name}.${meth.name}\" time=\"0\" result=\"${meth.result}\"></test>\\n`;\r\n                }\r\n                ret += `    </collection>\\n`;\r\n            }\r\n            ret += `  </assembly>\\n`;\r\n        }\r\n        ret += `</assemblies>`;\r\n        return ret;\r\n    }\r\n}\r\nexports.UnitTestResult = UnitTestResult;\r\n//# sourceMappingURL=unit_test.js.map\n\n//# sourceURL=webpack://open-table-maintenance/./node_modules/@abaplint/runtime/build/src/unit_test.js?");

/***/ })

}]);